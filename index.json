{
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.BaseApplicationEntity.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.BaseApplicationEntity.html",
    "title": "Class BaseApplicationEntity | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class BaseApplicationEntity DICOM Application Entity or AE. Inheritance Object BaseApplicationEntity DestinationApplicationEntity SourceApplicationEntity Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class BaseApplicationEntity : object Remarks Application Entity Properties | Improve this Doc View Source AeTitle Gets or sets the AE Title (AET) used to identify itself in a DICOM association. Declaration public string AeTitle { get; set; } Property Value Type Description String | Improve this Doc View Source HostIp Gets or set the host name or IP address of the AE Title. Declaration public string HostIp { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.ClaraApplicationEntity.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.ClaraApplicationEntity.html",
    "title": "Class ClaraApplicationEntity | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ClaraApplicationEntity Clara Application Entity Clara's SCP AE Title which is used to map to a user-defined pipeline. Inheritance Object ClaraApplicationEntity Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class ClaraApplicationEntity : object Examples { \"name\": \"brain-tumor\", \"aeTitle\": \"BrainTumorModel\", \"overwriteSameInstance\": true, \"ignoredSopClasses\": [ \"1.2.840.10008.5.1.4.1.1.7\" ], \"processor\": \"Nvidia.Clara.DicomAdapter.Server.Processors.AeTitleJobProcessor, Nvidia.Clara.DicomAdapter\", \"processorSettings\": { \"timeout\": 5, \"priority\": \"higher\", \"pipeline-brain-tumor\": \"7b9cda79ed834fdc87cd4169216c4011\", \"otherSettings\": 12345 } } Constructors | Improve this Doc View Source ClaraApplicationEntity() Declaration public ClaraApplicationEntity() Fields | Improve this Doc View Source DefaultClaraJobProcessor Declaration public static readonly string DefaultClaraJobProcessor Field Value Type Description String Properties | Improve this Doc View Source AeTitle Gets or sets the AE TItle. Declaration public string AeTitle { get; set; } Property Value Type Description String | Improve this Doc View Source IgnoredSopClasses Tells the SCP to not store DICOM instances with matching SOP Class UIDs. Declaration public IList<string> IgnoredSopClasses { get; set; } Property Value Type Description IList < String > | Improve this Doc View Source Name Gets or sets the name of a Clara DICOM application entity. This value must be unique. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source OverwriteSameInstance Gets or sets whether or not to overwrite existing instance with the same SOP Instance UID. Declaration public bool OverwriteSameInstance { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Processor Gets or sets the processor to use for this AE Title. Default: DefaultClaraJobProcessor Declaration public string Processor { get; set; } Property Value Type Description String | Improve this Doc View Source ProcessorSettings Gets or set additional settings for the configured processor. All settings are passed to the processor as is for handling. Declaration public Dictionary<string, string> ProcessorSettings { get; set; } Property Value Type Description Dictionary < String , String > Methods | Improve this Doc View Source SetDefaultValues() Declaration public void SetDefaultValues() Extension Methods ValidationExtensions.IsValid(ClaraApplicationEntity, IEnumerable<String>, out IList<String>)"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.DestinationApplicationEntity.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.DestinationApplicationEntity.html",
    "title": "Class DestinationApplicationEntity | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class DestinationApplicationEntity Destination Application Entity Inheritance Object BaseApplicationEntity DestinationApplicationEntity Inherited Members BaseApplicationEntity.AeTitle BaseApplicationEntity.HostIp Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class DestinationApplicationEntity : BaseApplicationEntity Examples { \"name\": \"MYPACS\", \"hostIp\": \"10.20.100.200\", \"aeTitle\": \"NVIDIAPACS\" } Properties | Improve this Doc View Source Name Gets or sets the unique name used to identify a DICOM destination. This value must be unique. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Port Gets or sets the port to connect to. Declaration public int Port { get; set; } Property Value Type Description Int32 Extension Methods ValidationExtensions.IsValid(DestinationApplicationEntity, IEnumerable<String>, out IList<String>)"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.html",
    "title": "Namespace Nvidia.Clara.DicomAdapter.API | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Namespace Nvidia.Clara.DicomAdapter.API Classes BaseApplicationEntity DICOM Application Entity or AE. ClaraApplicationEntity Clara Application Entity Clara's SCP AE Title which is used to map to a user-defined pipeline. DestinationApplicationEntity Destination Application Entity InferenceJob InferenceJob is used to track status a of job that is to be submitted to the Clara Platform service. It is used internally by the JobSubmissionService. InstanceNotSupportedException InstanceNotSupportedException is thrown if a Job Processor cannot handle the specified DICOM instance. InstanceStorageInfo Provides basic information for a DICOM instance and storage hierarchy/path. Job JobMetadataBuilder JobMetadataBuilderFactory JobProcessorBase JobProcessorBase is an abstraction layer to simplify the job submission process to Clara Platform API. This allows one to customize the grouping of received DICOM instances based on their workflow requirements. Name , AeTitle and HandleInstance(InstanceStorageInfo) are the required properties and method to be implemented. SubmitPipelineJob(String, String, JobPriority, String, IList<InstanceStorageInfo>) may be used to submit a new job to the Clara Platform API. RemoveInstances(List<InstanceStorageInfo>) shall be called once job is submitted and can be removed from the temporary storage. JobStoreException Job storage exception MissingRequiredTagException MissingRequiredTagException is thrown when the required DICOM tag is not found, null or blank. PayloadFile PayloadUploadException InstanceNotSupportedException is thrown if a Job Processor cannot handle the specified DICOM instance. ProcessorValidationAttribute An attribute that is attached to a derived class of JobProcessorBase . This attribute is used when the Create Clara AE Title (RESTful) API is called. The API looks up the passed in value of Job Processor and reads the associated attribute to determine and instantiate IJobProcessorValidator for validating process settings. SourceApplicationEntity Source (SCP) Application Entity Interfaces IClaraService IInstanceCleanupQueue Interface of Instance Cleanup Queue IInstanceStoredNotificationService Interface of the Instance Stored Notification Service IJobMetadataBuilderFactory IJobProcessorValidator Interface for providing a validator for JobProcessor. See ProcessorValidationAttribute . IJobRepository Interface for queuing jobs to be submitted to Clara Platform. The actual implementation stores all queued jobs in a database and deletes the job once the associated job is successfully submitted. IJobs Interface wrapper for the Platform Jobs API IPayloads Interface wrapper for the Platform Payloads API IResultsService Interface of the Results Service RESTful API Enums InferenceJobState State of a inference job submission. InferenceJobStatus Status of an inference job submission."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IClaraService.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IClaraService.html",
    "title": "Interface IClaraService | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IClaraService Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IClaraService Properties | Improve this Doc View Source Status Declaration ServiceStatus Status { get; set; } Property Value Type Description ServiceStatus"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IInstanceCleanupQueue.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IInstanceCleanupQueue.html",
    "title": "Interface IInstanceCleanupQueue | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IInstanceCleanupQueue Interface of Instance Cleanup Queue Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IInstanceCleanupQueue Methods | Improve this Doc View Source Dequeue(CancellationToken) Dequeue a file from the queue for cleanup. The default implementation blocks the call until a file is available from the queue. Declaration string Dequeue(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Propagates notification that operations should be canceled. Returns Type Description String | Improve this Doc View Source QueueInstance(String) Queue a new file to be cleaned up. Declaration void QueueInstance(string filePath) Parameters Type Name Description String filePath Path to the file to be removed."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IInstanceStoredNotificationService.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IInstanceStoredNotificationService.html",
    "title": "Interface IInstanceStoredNotificationService | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IInstanceStoredNotificationService Interface of the Instance Stored Notification Service Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IInstanceStoredNotificationService : IObservable<InstanceStorageInfo> Methods | Improve this Doc View Source NewInstanceStored(InstanceStorageInfo) Notifies the service of a new instance stored in the temporary storage location. Declaration void NewInstanceStored(InstanceStorageInfo instance) Parameters Type Name Description InstanceStorageInfo instance Instance that has been stored."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobMetadataBuilderFactory.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobMetadataBuilderFactory.html",
    "title": "Interface IJobMetadataBuilderFactory | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IJobMetadataBuilderFactory Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IJobMetadataBuilderFactory Methods | Improve this Doc View Source Build(Boolean, IReadOnlyList<String>, IReadOnlyList<String>) Declaration JobMetadataBuilder Build(bool uploadMetadata, IReadOnlyList<string> dicomTags, IReadOnlyList<string> files) Parameters Type Name Description Boolean uploadMetadata IReadOnlyList < String > dicomTags IReadOnlyList < String > files Returns Type Description JobMetadataBuilder"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobProcessorValidator.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobProcessorValidator.html",
    "title": "Interface IJobProcessorValidator | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IJobProcessorValidator Interface for providing a validator for JobProcessor. See ProcessorValidationAttribute . Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IJobProcessorValidator Methods | Improve this Doc View Source Validate(String, Dictionary<String, String>) Validates process settings and throws if any invalid entires or ignored entries are found. Declaration void Validate(string aeTitle, Dictionary<string, string> processorSettings) Parameters Type Name Description String aeTitle AE Title of the associated settings. Dictionary < String , String > processorSettings Settings of a job processor."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobRepository.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobRepository.html",
    "title": "Interface IJobRepository | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IJobRepository Interface for queuing jobs to be submitted to Clara Platform. The actual implementation stores all queued jobs in a database and deletes the job once the associated job is successfully submitted. Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IJobRepository Methods | Improve this Doc View Source Add(InferenceJob) Queues a new job for submission. New makes a copy of the instances to a temporary location that is to be uploaded by the Nvidia.Clara.DicomAdapter.Server.Services.Jobs.JobSubmissionService . Declaration Task Add(InferenceJob job) Parameters Type Name Description InferenceJob job InferenceJob Returns Type Description Task | Improve this Doc View Source Add(InferenceJob, Boolean) Queues a new job for submission and disable EF change tracking. New makes a copy of the instances to a temporary location that is to be uploaded by the Nvidia.Clara.DicomAdapter.Server.Services.Jobs.JobSubmissionService . Declaration Task Add(InferenceJob job, bool enableTracking) Parameters Type Name Description InferenceJob job InferenceJob Boolean enableTracking Returns Type Description Task | Improve this Doc View Source ResetJobState() Revert all jobs that are in processing states back into waiting states. Declaration Task ResetJobState() Returns Type Description Task | Improve this Doc View Source Take(CancellationToken) Take returns the next pending request for submission. The default implementation blocks the call until a pending request is available for submission. Declaration Task<InferenceJob> Take(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken cancellation token used to cancel the action. Returns Type Description Task < InferenceJob > InferenceJob | Improve this Doc View Source TransitionState(InferenceJob, InferenceJobStatus, CancellationToken) Transition a job to the next processing state. Declaration Task<InferenceJob> TransitionState(InferenceJob job, InferenceJobStatus status, CancellationToken cancellationToken) Parameters Type Name Description InferenceJob job InferenceJob InferenceJobStatus status Status of the request. CancellationToken cancellationToken cancellation token used to cancel the action. Returns Type Description Task < InferenceJob >"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobs.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IJobs.html",
    "title": "Interface IJobs | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IJobs Interface wrapper for the Platform Jobs API Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IJobs Methods | Improve this Doc View Source AddMetadata(Job, IDictionary<String, String>) Starts the job Declaration Task AddMetadata(Job job, IDictionary<string, string> metadata) Parameters Type Name Description Job job Add metadata to a job. IDictionary < String , String > metadata Returns Type Description Task | Improve this Doc View Source Create(String, String, JobPriority, IDictionary<String, String>) Creates a new job Declaration Task<Job> Create(string pipelineId, string jobName, JobPriority jobPriority, IDictionary<string, string> metadata) Parameters Type Name Description String pipelineId Pipeline ID to create a new job from. String jobName Name of the job. JobPriority jobPriority Priority of the job. IDictionary < String , String > metadata Returns Type Description Task < Job > | Improve this Doc View Source Start(Job) Starts the job Declaration Task Start(Job job) Parameters Type Name Description Job job Job to start. Returns Type Description Task | Improve this Doc View Source Status(String) Gets status of a job Declaration Task<JobDetails> Status(string jobId) Parameters Type Name Description String jobId job id Returns Type Description Task < JobDetails >"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJob.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJob.html",
    "title": "Class InferenceJob | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceJob InferenceJob is used to track status a of job that is to be submitted to the Clara Platform service. It is used internally by the JobSubmissionService. Inheritance Object Job InferenceJob Inherited Members Job.JobId Job.PayloadId Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceJob : Job Constructors | Improve this Doc View Source InferenceJob() Declaration public InferenceJob() Properties | Improve this Doc View Source InferenceJobId Declaration public Guid InferenceJobId { get; set; } Property Value Type Description Guid | Improve this Doc View Source Instances Declaration public IList<InstanceStorageInfo> Instances { get; set; } Property Value Type Description IList < InstanceStorageInfo > | Improve this Doc View Source JobName Declaration public string JobName { get; set; } Property Value Type Description String | Improve this Doc View Source JobPayloadsStoragePath Declaration public string JobPayloadsStoragePath { get; } Property Value Type Description String | Improve this Doc View Source LastUpdate Declaration public DateTime LastUpdate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source PipelineId Declaration public string PipelineId { get; set; } Property Value Type Description String | Improve this Doc View Source Priority Declaration public JobPriority Priority { get; set; } Property Value Type Description JobPriority | Improve this Doc View Source Source Declaration public string Source { get; set; } Property Value Type Description String | Improve this Doc View Source State Declaration public InferenceJobState State { get; set; } Property Value Type Description InferenceJobState | Improve this Doc View Source TryCount Declaration public int TryCount { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source SetStoragePath(String) Declaration public void SetStoragePath(string targetStoragePath) Parameters Type Name Description String targetStoragePath"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJobState.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJobState.html",
    "title": "Enum InferenceJobState | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InferenceJobState State of a inference job submission. Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InferenceJobState : int Fields Name Description Completed Created Creating Faulted MetadataUploaded MetadataUploading PayloadUploaded PayloadUploading Queued Starting"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJobStatus.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.InferenceJobStatus.html",
    "title": "Enum InferenceJobStatus | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InferenceJobStatus Status of an inference job submission. Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InferenceJobStatus : int Fields Name Description Fail Success"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.InstanceNotSupportedException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.InstanceNotSupportedException.html",
    "title": "Class InstanceNotSupportedException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InstanceNotSupportedException InstanceNotSupportedException is thrown if a Job Processor cannot handle the specified DICOM instance. Inheritance Object InstanceNotSupportedException Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InstanceNotSupportedException : System.Exception Constructors | Improve this Doc View Source InstanceNotSupportedException(InstanceStorageInfo) Declaration public InstanceNotSupportedException(InstanceStorageInfo instance) Parameters Type Name Description InstanceStorageInfo instance Properties | Improve this Doc View Source Instance Declaration public InstanceStorageInfo Instance { get; } Property Value Type Description InstanceStorageInfo"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.InstanceStorageInfo.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.InstanceStorageInfo.html",
    "title": "Class InstanceStorageInfo | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InstanceStorageInfo Provides basic information for a DICOM instance and storage hierarchy/path. Inheritance Object InstanceStorageInfo Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InstanceStorageInfo : object Properties | Improve this Doc View Source AeStoragePath Gets the root path to the location of the AE storage. Declaration public string AeStoragePath { get; } Property Value Type Description String | Improve this Doc View Source CalledAeTitle Gets the name of the AE Title receiving the instance. Declaration public string CalledAeTitle { get; } Property Value Type Description String | Improve this Doc View Source InstanceStorageFullPath Gets the full path to the instance. Declaration public string InstanceStorageFullPath { get; } Property Value Type Description String | Improve this Doc View Source PatientId Gets Patient ID (0010,0020) of the DICOM instance. Declaration public string PatientId { get; } Property Value Type Description String | Improve this Doc View Source PatientStoragePath Gets the path to the location for this patient ID in the AE Storage. Declaration public string PatientStoragePath { get; } Property Value Type Description String | Improve this Doc View Source SeriesInstanceUid Gets Series Instance UID of the DICOM instance. Declaration public string SeriesInstanceUid { get; } Property Value Type Description String | Improve this Doc View Source SeriesStoragePath Gets the path to the location for this Series in the AE Storage. Declaration public string SeriesStoragePath { get; } Property Value Type Description String | Improve this Doc View Source SopClassUid Gets SOP Class UID of the DICOM instance. Declaration public string SopClassUid { get; } Property Value Type Description String | Improve this Doc View Source SopInstanceUid Gets SOP Instance UID of the DICOM instance. Declaration public string SopInstanceUid { get; } Property Value Type Description String | Improve this Doc View Source StorageRootPath Gets the root path to the storage location. Declaration public string StorageRootPath { get; } Property Value Type Description String | Improve this Doc View Source StudyInstanceUid Gets Study Instance UID of the DICOM instance. Declaration public string StudyInstanceUid { get; } Property Value Type Description String | Improve this Doc View Source StudyStoragePath Gets the path to the location for this Study in the AE Storage. Declaration public string StudyStoragePath { get; } Property Value Type Description String Methods | Improve this Doc View Source CreateInstanceStorageInfo(DicomCStoreRequest, String, String, UInt32, IFileSystem) Static method to create an instance of InstanceStorageInfo from DicomCStoreRequest . Declaration public static InstanceStorageInfo CreateInstanceStorageInfo(DicomCStoreRequest request, string storageRootFullPath, string calledAeTitle, uint associationId, IFileSystem fileSystem = null) Parameters Type Name Description DicomCStoreRequest request Instance of DicomCStoreRequest . String storageRootFullPath Root path to the storage location. String calledAeTitle The calling AE title where the instance was sent from. UInt32 associationId IFileSystem fileSystem An (optional) instance of IFileSystem from System.IO.Abstractions Returns Type Description InstanceStorageInfo | Improve this Doc View Source CreateInstanceStorageInfo(DicomFile, String, IFileSystem) Static method to create an instance of InstanceStorageInfo from DicomFile . Declaration public static InstanceStorageInfo CreateInstanceStorageInfo(DicomFile dicomFile, string storageRootFullPath, IFileSystem fileSystem = null) Parameters Type Name Description DicomFile dicomFile Instance of DicomFile . String storageRootFullPath Root path to the storage location. IFileSystem fileSystem An (optional) instance of IFileSystem from System.IO.Abstractions Returns Type Description InstanceStorageInfo"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IPayloads.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IPayloads.html",
    "title": "Interface IPayloads | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IPayloads Interface wrapper for the Platform Payloads API Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IPayloads Methods | Improve this Doc View Source Download(String, String) Downloads the specified payload Declaration Task<PayloadFile> Download(string payloadId, string path) Parameters Type Name Description String payloadId String path Returns Type Description Task < PayloadFile > | Improve this Doc View Source Upload(String, String, String) Uploads file to the specified payload Declaration Task Upload(string payload, string name, string filePath) Parameters Type Name Description String payload Target payload String name name of the file in the payload String filePath source file to upload Returns Type Description Task"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.IResultsService.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.IResultsService.html",
    "title": "Interface IResultsService | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Interface IResultsService Interface of the Results Service RESTful API Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public interface IResultsService Methods | Improve this Doc View Source GetPendingJobs(String, CancellationToken, Int32) Retrieves a list of pending tasks assigned to an agent from Results Service Declaration Task<IList<TaskResponse>> GetPendingJobs(string agent, CancellationToken cancellationToken, int count) Parameters Type Name Description String agent name of the agent CancellationToken cancellationToken Int32 count number of tasks to retrieve Returns Type Description Task < IList < TaskResponse >> List of tasks | Improve this Doc View Source ReportFailure(Guid, Boolean, CancellationToken) Reports failed status to the Results Service for the specified task Declaration Task<bool> ReportFailure(Guid taskId, bool retryLater, CancellationToken cancellationToken) Parameters Type Name Description Guid taskId task to update Boolean retryLater indicates if task will be retries at a later time CancellationToken cancellationToken Returns Type Description Task < Boolean > bool if call was successful; false otherwise | Improve this Doc View Source ReportSuccess(Guid, CancellationToken) Reports successful status to the Results Service for the specified task Declaration Task<bool> ReportSuccess(Guid taskId, CancellationToken cancellationToken) Parameters Type Name Description Guid taskId task to update CancellationToken cancellationToken Returns Type Description Task < Boolean > bool if call was successful; false otherwise"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Job.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Job.html",
    "title": "Class Job | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class Job Inheritance Object Job InferenceJob Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class Job : object Properties | Improve this Doc View Source JobId Declaration public string JobId { get; set; } Property Value Type Description String | Improve this Doc View Source PayloadId Declaration public string PayloadId { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobMetadataBuilder.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobMetadataBuilder.html",
    "title": "Class JobMetadataBuilder | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class JobMetadataBuilder Inheritance Object JobMetadataBuilder Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class JobMetadataBuilder : Dictionary<string, string> Methods | Improve this Doc View Source AddInstanceCount(Int32) Declaration public void AddInstanceCount(int instanceCount) Parameters Type Name Description Int32 instanceCount | Improve this Doc View Source AddSourceName(String) Declaration public void AddSourceName(string value) Parameters Type Name Description String value"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobMetadataBuilderFactory.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobMetadataBuilderFactory.html",
    "title": "Class JobMetadataBuilderFactory | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class JobMetadataBuilderFactory Inheritance Object JobMetadataBuilderFactory Implements IJobMetadataBuilderFactory Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class JobMetadataBuilderFactory : object, IJobMetadataBuilderFactory Constructors | Improve this Doc View Source JobMetadataBuilderFactory(ILogger<JobMetadataBuilderFactory>, IDicomToolkit) Declaration public JobMetadataBuilderFactory(ILogger<JobMetadataBuilderFactory> logger, IDicomToolkit dicomToolkit) Parameters Type Name Description ILogger < JobMetadataBuilderFactory > logger Nvidia.Clara.DicomAdapter.Common.IDicomToolkit dicomToolkit Methods | Improve this Doc View Source Build(Boolean, IReadOnlyList<String>, IReadOnlyList<String>) Declaration public JobMetadataBuilder Build(bool uploadMetadata, IReadOnlyList<string> dicomTags, IReadOnlyList<string> files) Parameters Type Name Description Boolean uploadMetadata IReadOnlyList < String > dicomTags IReadOnlyList < String > files Returns Type Description JobMetadataBuilder Implements IJobMetadataBuilderFactory"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobProcessorBase.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobProcessorBase.html",
    "title": "Class JobProcessorBase | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class JobProcessorBase JobProcessorBase is an abstraction layer to simplify the job submission process to Clara Platform API. This allows one to customize the grouping of received DICOM instances based on their workflow requirements. Name , AeTitle and HandleInstance(InstanceStorageInfo) are the required properties and method to be implemented. SubmitPipelineJob(String, String, JobPriority, String, IList<InstanceStorageInfo>) may be used to submit a new job to the Clara Platform API. RemoveInstances(List<InstanceStorageInfo>) shall be called once job is submitted and can be removed from the temporary storage. Inheritance Object JobProcessorBase Implements IObserver < InstanceStorageInfo > Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public abstract class JobProcessorBase : IDisposable, IObserver<InstanceStorageInfo> Constructors | Improve this Doc View Source JobProcessorBase(IInstanceStoredNotificationService, ILoggerFactory, IJobRepository, IInstanceCleanupQueue, CancellationToken) Declaration public JobProcessorBase(IInstanceStoredNotificationService instanceStoredNotificationService, ILoggerFactory loggerFactory, IJobRepository jobStore, IInstanceCleanupQueue cleanupQueue, CancellationToken cancellationToken) Parameters Type Name Description IInstanceStoredNotificationService instanceStoredNotificationService ILoggerFactory loggerFactory IJobRepository jobStore IInstanceCleanupQueue cleanupQueue CancellationToken cancellationToken Properties | Improve this Doc View Source AeTitle Declaration public abstract string AeTitle { get; } Property Value Type Description String | Improve this Doc View Source CancellationToken Declaration protected CancellationToken CancellationToken { get; } Property Value Type Description CancellationToken | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source HandleInstance(InstanceStorageInfo) Declaration public abstract void HandleInstance(InstanceStorageInfo value) Parameters Type Name Description InstanceStorageInfo value | Improve this Doc View Source OnCompleted() Declaration public void OnCompleted() | Improve this Doc View Source OnError(Exception) Declaration public void OnError(Exception error) Parameters Type Name Description Exception error | Improve this Doc View Source OnNext(InstanceStorageInfo) Declaration public void OnNext(InstanceStorageInfo value) Parameters Type Name Description InstanceStorageInfo value | Improve this Doc View Source RemoveInstances(List<InstanceStorageInfo>) Declaration protected void RemoveInstances(List<InstanceStorageInfo> instances) Parameters Type Name Description List < InstanceStorageInfo > instances | Improve this Doc View Source SubmitPipelineJob(String, String, JobPriority, String, IList<InstanceStorageInfo>) Declaration protected Task SubmitPipelineJob(string jobName, string pipelineId, JobPriority jobPriority, string basePath, IList<InstanceStorageInfo> instances) Parameters Type Name Description String jobName String pipelineId JobPriority jobPriority String basePath IList < InstanceStorageInfo > instances Returns Type Description Task | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Implements IObserver<>"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobStoreException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.JobStoreException.html",
    "title": "Class JobStoreException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class JobStoreException Job storage exception Inheritance Object JobStoreException Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class JobStoreException : Exception Constructors | Improve this Doc View Source JobStoreException() Declaration public JobStoreException() | Improve this Doc View Source JobStoreException(SerializationInfo, StreamingContext) Declaration protected JobStoreException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source JobStoreException(String) Declaration public JobStoreException(string message) Parameters Type Name Description String message | Improve this Doc View Source JobStoreException(String, Exception) Declaration public JobStoreException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.MissingRequiredTagException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.MissingRequiredTagException.html",
    "title": "Class MissingRequiredTagException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class MissingRequiredTagException MissingRequiredTagException is thrown when the required DICOM tag is not found, null or blank. Inheritance Object MissingRequiredTagException Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class MissingRequiredTagException : System.Exception Constructors | Improve this Doc View Source MissingRequiredTagException(DicomTag) Declaration public MissingRequiredTagException(DicomTag tag) Parameters Type Name Description DicomTag tag | Improve this Doc View Source MissingRequiredTagException(DicomTag[]) Declaration public MissingRequiredTagException(params DicomTag[] tags) Parameters Type Name Description DicomTag [] tags"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.PayloadFile.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.PayloadFile.html",
    "title": "Class PayloadFile | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class PayloadFile Inheritance Object PayloadFile Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class PayloadFile : object Properties | Improve this Doc View Source Data Declaration public byte[] Data { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.PayloadUploadException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.PayloadUploadException.html",
    "title": "Class PayloadUploadException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class PayloadUploadException InstanceNotSupportedException is thrown if a Job Processor cannot handle the specified DICOM instance. Inheritance Object PayloadUploadException Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class PayloadUploadException : Exception Constructors | Improve this Doc View Source PayloadUploadException() Declaration public PayloadUploadException() | Improve this Doc View Source PayloadUploadException(String) Declaration public PayloadUploadException(string message) Parameters Type Name Description String message"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.ProcessorValidationAttribute.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.ProcessorValidationAttribute.html",
    "title": "Class ProcessorValidationAttribute | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ProcessorValidationAttribute An attribute that is attached to a derived class of JobProcessorBase . This attribute is used when the Create Clara AE Title (RESTful) API is called. The API looks up the passed in value of Job Processor and reads the associated attribute to determine and instantiate IJobProcessorValidator for validating process settings. Inheritance Object ProcessorValidationAttribute Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class ProcessorValidationAttribute : System.Attribute Properties | Improve this Doc View Source ValidatorType Declaration public Type ValidatorType { get; set; } Property Value Type Description Type"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.ConnectionAuthType.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.ConnectionAuthType.html",
    "title": "Enum ConnectionAuthType | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum ConnectionAuthType Specifies then authentication/authorization type for a connection. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum ConnectionAuthType : int Fields Name Description Basic HTTP Basic access authentication. JSON value : Basic Bearer OAuth 2.0 Bearer authentication/authorization. JSON value : Bearer None No authentication required. (Default) if not specified. JSON value : None"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.DicomWebConnectionDetails.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.DicomWebConnectionDetails.html",
    "title": "Class DicomWebConnectionDetails | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class DicomWebConnectionDetails Connection details of a data source. Inheritance Object DicomWebConnectionDetails InputConnectionDetails Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class DicomWebConnectionDetails : object Properties | Improve this Doc View Source AuthId Gets or sets the authentication/authorization token of the connection. For HTTP basic access authentication, the value must be encoded in based 64 using \"{username}:{password}\" format. Declaration public string AuthId { get; set; } Property Value Type Description String | Improve this Doc View Source AuthType Gets or sets the type of the authentication token used for the connection. Defaults to None if not specified. Declaration public ConnectionAuthType AuthType { get; set; } Property Value Type Description ConnectionAuthType | Improve this Doc View Source Operations Gets or sets a list of permitted operations for the connection. Declaration public IList<InputInterfaceOperations> Operations { get; set; } Property Value Type Description IList < InputInterfaceOperations > | Improve this Doc View Source Uri Gets or sets the resource URI (Uniform Resource Identifier) of the connection. Declaration public string Uri { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.HealthStatusResponse.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.HealthStatusResponse.html",
    "title": "Class HealthStatusResponse | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class HealthStatusResponse Response message of a successful inference request. Inheritance Object HealthStatusResponse Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class HealthStatusResponse : object Properties | Improve this Doc View Source ActiveDimseConnections Gets or sets the number of active DIMSE connetions. Declaration public int ActiveDimseConnections { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Services Gets or sets status of DICOM Adapter services. Declaration public Dictionary<string, ServiceStatus> Services { get; set; } Property Value Type Description Dictionary < String , ServiceStatus >"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.html",
    "title": "Namespace Nvidia.Clara.DicomAdapter.API.Rest | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Namespace Nvidia.Clara.DicomAdapter.API.Rest Classes DicomWebConnectionDetails Connection details of a data source. HealthStatusResponse Response message of a successful inference request. InferenceRequest Structure that represents an inference request based on ACR's Platform-Model Communication for AI. InferenceRequestDetails Details of an inference request. InferenceRequestException Inference request exception. InferenceRequestMetadata Represents the metadata associated with an inference request. InferenceRequestResponse Response message of a successful inference request. InferenceStatusResponse Response message of a inference status query. InferenceStatusResponse.DicomAdapterStatus InferenceStatusResponse.PlatformStatus InputConnectionDetails Connection details of a data source. RequestedInstance Details of a DICOM instance to be retrieved for an inference request. RequestedSeries Details of a DICOM series to be retrieved for an inference request. RequestedStudy Details of a DICOM study to be retrieved for an inference request. RequestInputDataResource Represents an input resource (data source). RequestOutputDataResource Represents an output/export resource (data source). Enums ConnectionAuthType Specifies then authentication/authorization type for a connection. InferenceRequestState State of a inference request. InferenceRequestStatus Status of an inference request. InferenceRequestType Specifies type of inference request. InputInterfaceOperations Permitted operations for a data source InputInterfaceType Specifies the type of data source interface. ServiceStatus Defines the state of a running DICOM Adapter service."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequest.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequest.html",
    "title": "Class InferenceRequest | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceRequest Structure that represents an inference request based on ACR's Platform-Model Communication for AI. Inheritance Object InferenceRequest Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceRequest : object Remarks Refer to ACR DSI Model API for more information. transactionID> is required. inputMetadata> is required. inputResources> is required. Examples { \"transactionID\": \"ABCDEF123456\", \"priority\": \"255\", \"inputMetadata\": { ... }, \"inputResources\": [ ... ], \"outputResources\": [ ... ] } Constructors | Improve this Doc View Source InferenceRequest() Declaration public InferenceRequest() Properties | Improve this Doc View Source Algorithm Declaration public InputConnectionDetails Algorithm { get; } Property Value Type Description InputConnectionDetails | Improve this Doc View Source ClaraJobPriority Declaration public JobPriority ClaraJobPriority { get; } Property Value Type Description JobPriority | Improve this Doc View Source InferenceRequestId Unique identity for the request. Declaration public Guid InferenceRequestId { get; set; } Property Value Type Description Guid | Improve this Doc View Source InputMetadata Gets or sets the details of the data associated with the inference request. Declaration public InferenceRequestMetadata InputMetadata { get; set; } Property Value Type Description InferenceRequestMetadata | Improve this Doc View Source InputResources Gets or set a list of data sources to query/retrieve data from. When multiple data sources are specified, the system will query based on the order the list was received. Declaration public IList<RequestInputDataResource> InputResources { get; set; } Property Value Type Description IList < RequestInputDataResource > | Improve this Doc View Source JobId Internal use - gets or sets the Job ID for the request once public Guid InferenceRequestId { get; set; } = Guid.NewGuid(); the job is created with Clara Platform Jobs API. Declaration public string JobId { get; set; } Property Value Type Description String Remarks Internal use only. | Improve this Doc View Source JobName Declaration public string JobName { get; } Property Value Type Description String | Improve this Doc View Source OutputResources Gets or set a list of data sources to export results to. In order to export via DICOMweb, the Clara Pipeline must include and use Register Results Operator and register the results with agent name \"DICOMweb\" or the values configured in dicom>scu>export>agent field. Declaration public IList<RequestOutputDataResource> OutputResources { get; set; } Property Value Type Description IList < RequestOutputDataResource > | Improve this Doc View Source PayloadId Internal use only - get or sets the Payload ID for the request once the job is created with Clara Platform Jobs API. Declaration public string PayloadId { get; set; } Property Value Type Description String Remarks Internal use only. | Improve this Doc View Source Priority Gets or sets the priority of a request. Declaration public byte Priority { get; set; } Property Value Type Description Byte Remarks Default value is 128 which maps to JOB_PRIORITY_NORMAL . Any value lower than 128 is map to JOB_PRIORITY_LOWER . Any value between 129-254 (inclusive) is set to JOB_PRIORITY_HIGHER . Value of 255 maps to JOB_PRIORITY_IMMEDIATE . | Improve this Doc View Source State Internal use only - get or sets the state of a inference request. Declaration public InferenceRequestState State { get; set; } Property Value Type Description InferenceRequestState Remarks Internal use only. | Improve this Doc View Source Status Internal use only - get or sets the status of a inference request. Declaration public InferenceRequestStatus Status { get; set; } Property Value Type Description InferenceRequestStatus Remarks Internal use only. | Improve this Doc View Source StoragePath Internal use only - get or sets the status of a inference request. Declaration public string StoragePath { get; set; } Property Value Type Description String Remarks Internal use only. | Improve this Doc View Source TransactionId Gets or set the transaction ID of a request. Declaration public string TransactionId { get; set; } Property Value Type Description String | Improve this Doc View Source TryCount Internal use only - get or sets number of retries performed. Declaration public int TryCount { get; set; } Property Value Type Description Int32 Remarks Internal use only. Methods | Improve this Doc View Source ConfigureTemporaryStorageLocation(String) Configures temporary storage location used to store retrieved data. Declaration public void ConfigureTemporaryStorageLocation(string storagePath) Parameters Type Name Description String storagePath | Improve this Doc View Source IsValid(out String) Declaration public bool IsValid(out string details) Parameters Type Name Description String details Returns Type Description Boolean"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestDetails.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestDetails.html",
    "title": "Class InferenceRequestDetails | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceRequestDetails Details of an inference request. Inheritance Object InferenceRequestDetails Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceRequestDetails : object Remarks type> is required. PatientID> is required if type is DicomUid . studies> is required if type is DicomPatientId . accessionNumber> is required if type is AccessionNumber . Examples { ... \"details\" : { \"type\": \"DICOM_UID\", \"studies\": [ ... ] } ... } or { ... \"details\" : { \"type\": \"DICOM_PATIENT_ID\", \"PatientID\": \"...\" } ... } or { ... \"details\" : { \"type\": \"ACCESSION_NUMBER\", \"accessionNumber\": [ ... ] } ... } Properties | Improve this Doc View Source AccessionNumber Gets or sets Access Number that is used to query the data source. Used when Type is AccessionNumber . Declaration public IList<string> AccessionNumber { get; set; } Property Value Type Description IList < String > | Improve this Doc View Source PatientId Gets or sets Patient ID that is used to query the data source. Used when Type is DicomPatientId . Declaration public string PatientId { get; set; } Property Value Type Description String | Improve this Doc View Source Studies Gets or sets the DICOM studies to be retrieved. Used when Type is DicomUid . Declaration public IList<RequestedStudy> Studies { get; set; } Property Value Type Description IList < RequestedStudy > | Improve this Doc View Source Type Gets or sets the type of the inference request. Declaration public InferenceRequestType Type { get; set; } Property Value Type Description InferenceRequestType"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestException.html",
    "title": "Class InferenceRequestException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceRequestException Inference request exception. Inheritance Object InferenceRequestException Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceRequestException : Exception Constructors | Improve this Doc View Source InferenceRequestException() Declaration public InferenceRequestException() | Improve this Doc View Source InferenceRequestException(SerializationInfo, StreamingContext) Declaration protected InferenceRequestException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context | Improve this Doc View Source InferenceRequestException(String) Declaration public InferenceRequestException(string message) Parameters Type Name Description String message | Improve this Doc View Source InferenceRequestException(String, Exception) Declaration public InferenceRequestException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestMetadata.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestMetadata.html",
    "title": "Class InferenceRequestMetadata | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceRequestMetadata Represents the metadata associated with an inference request. Inheritance Object InferenceRequestMetadata Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceRequestMetadata : object Remarks details> is required. Examples { ... \"inputMetadata\" : { \"details\" : { ... } } ... } Properties | Improve this Doc View Source Details Gets or sets the details of an inference request. Declaration public InferenceRequestDetails Details { get; set; } Property Value Type Description InferenceRequestDetails"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestResponse.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestResponse.html",
    "title": "Class InferenceRequestResponse | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceRequestResponse Response message of a successful inference request. Inheritance Object InferenceRequestResponse Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceRequestResponse : object Properties | Improve this Doc View Source JobId Gets or sets the Clara Platform job ID associated with the request. Declaration public string JobId { get; set; } Property Value Type Description String | Improve this Doc View Source PayloadId Gets or sets the Clara Platform payload ID associated with the request. Declaration public string PayloadId { get; set; } Property Value Type Description String | Improve this Doc View Source TransactionId Gets or sets the original request transaction ID. Declaration public string TransactionId { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestState.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestState.html",
    "title": "Enum InferenceRequestState | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InferenceRequestState State of a inference request. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InferenceRequestState : int Fields Name Description Completed Indicates DICOM Adapter has submitted a new pipeline job with the Clara Platform. InProcess The inference request is being processing by DICOM Adapter. Queued Indicates that an inference request is currently queued for data retrieval."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestStatus.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestStatus.html",
    "title": "Enum InferenceRequestStatus | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InferenceRequestStatus Status of an inference request. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InferenceRequestStatus : int Fields Name Description Fail Success Unknown"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestType.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequestType.html",
    "title": "Enum InferenceRequestType | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InferenceRequestType Specifies type of inference request. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InferenceRequestType : int Fields Name Description AccessionNumber Queries the data source using Accession Number and retrieves any associated studies. JSON value : ACCESSION_NUMBER DicomPatientId Queries the data source using Patient ID and retrieves any associated studies. JSON value : DICOM_PATIENT_ID DicomUid Retrieves dataset specified using DICOM UIDs JSON value : DICOM_UID Unknown Unknown request type"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.DicomAdapterStatus.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.DicomAdapterStatus.html",
    "title": "Class InferenceStatusResponse.DicomAdapterStatus | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceStatusResponse.DicomAdapterStatus Inheritance Object InferenceStatusResponse.DicomAdapterStatus Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class DicomAdapterStatus : object Properties | Improve this Doc View Source State Gets or sets the state of the inference request. Declaration public InferenceRequestState State { get; set; } Property Value Type Description InferenceRequestState | Improve this Doc View Source Status Gets or set the state of the inference status. Declaration public InferenceRequestStatus Status { get; set; } Property Value Type Description InferenceRequestStatus"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.html",
    "title": "Class InferenceStatusResponse | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceStatusResponse Response message of a inference status query. Inheritance Object InferenceStatusResponse Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InferenceStatusResponse : object Properties | Improve this Doc View Source Dicom Gets or set DICOM Adapter status. Declaration public InferenceStatusResponse.DicomAdapterStatus Dicom { get; set; } Property Value Type Description InferenceStatusResponse.DicomAdapterStatus | Improve this Doc View Source Message Gets or sets additional message. Declaration public string Message { get; set; } Property Value Type Description String | Improve this Doc View Source Platform Gets or sets Clara Platform status. Declaration public InferenceStatusResponse.PlatformStatus Platform { get; set; } Property Value Type Description InferenceStatusResponse.PlatformStatus | Improve this Doc View Source TransactionId Gets or set the transaction ID of a request. Declaration public string TransactionId { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.PlatformStatus.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InferenceStatusResponse.PlatformStatus.html",
    "title": "Class InferenceStatusResponse.PlatformStatus | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InferenceStatusResponse.PlatformStatus Inheritance Object InferenceStatusResponse.PlatformStatus Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class PlatformStatus : object Properties | Improve this Doc View Source Created Gets or set when the job was created. Declaration public DateTimeOffset? Created { get; set; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source JobId Gets or set Clara Platform generated Job ID. Declaration public string JobId { get; set; } Property Value Type Description String | Improve this Doc View Source PayloadId Gets or set Clara Platform generated Payload ID. Declaration public string PayloadId { get; set; } Property Value Type Description String | Improve this Doc View Source Priority Gets or set job's priority. Declaration public JobPriority Priority { get; set; } Property Value Type Description JobPriority | Improve this Doc View Source Started Gets or set when the job started execution. Declaration public DateTimeOffset? Started { get; set; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source State Gets or sets job's state. Declaration public JobState State { get; set; } Property Value Type Description JobState | Improve this Doc View Source Status Gets or set job's status. Declaration public JobStatus Status { get; set; } Property Value Type Description JobStatus | Improve this Doc View Source Stopped Gets or set when the job stopped execution. Declaration public DateTimeOffset? Stopped { get; set; } Property Value Type Description Nullable < DateTimeOffset >"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputConnectionDetails.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputConnectionDetails.html",
    "title": "Class InputConnectionDetails | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class InputConnectionDetails Connection details of a data source. Inheritance Object DicomWebConnectionDetails InputConnectionDetails Inherited Members DicomWebConnectionDetails.Operations DicomWebConnectionDetails.Uri DicomWebConnectionDetails.AuthId DicomWebConnectionDetails.AuthType Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class InputConnectionDetails : DicomWebConnectionDetails Properties | Improve this Doc View Source Name Gets or sets the name of the algorithm. Used when Nvidia.Clara.Dicom.API.InputInterfaceType is Nvidia.Clara.Dicom.API.InputInterfaceType.Algorithm . Name is also used as the job name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source PipelineId Gets or sets the Clara Deploy Pipeline ID. Used when Nvidia.Clara.Dicom.API.InputInterfaceType is Nvidia.Clara.Dicom.API.InputInterfaceType.Algorithm . Declaration public string PipelineId { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputInterfaceOperations.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputInterfaceOperations.html",
    "title": "Enum InputInterfaceOperations | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InputInterfaceOperations Permitted operations for a data source Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InputInterfaceOperations : int Fields Name Description Query Query includes C-FIND, QIDO operations JSON value : QUERY Retrieve Retrieve include C-MOVE, WADO operations JSON value : RETRIEVE Store Store includes C-STORE, STOW operations JSON value : STORE WadoRetrieve DICOMweb WADO JSON value : WADO Retrieve"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputInterfaceType.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.InputInterfaceType.html",
    "title": "Enum InputInterfaceType | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum InputInterfaceType Specifies the type of data source interface. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum InputInterfaceType : int Fields Name Description Algorithm NVIDIA Clara Deploy only - specifies a Clara Pipeline to trigger with the request JSON value : Algorithm DicomWeb Retrieves data using DICOMweb API JSON value : DICOMweb Dimse Retrieves data using TCP based DICOM DIMSE services JSON value : DIMSE"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedInstance.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedInstance.html",
    "title": "Class RequestedInstance | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class RequestedInstance Details of a DICOM instance to be retrieved for an inference request. Inheritance Object RequestedInstance Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class RequestedInstance : object Remarks SopInstanceUid> is required. Properties | Improve this Doc View Source SopInstanceUid Gets or sets the SOP Instance UID to be retrieved. Declaration public IList<string> SopInstanceUid { get; set; } Property Value Type Description IList < String >"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedSeries.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedSeries.html",
    "title": "Class RequestedSeries | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class RequestedSeries Details of a DICOM series to be retrieved for an inference request. Inheritance Object RequestedSeries Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class RequestedSeries : object Remarks SeriesInstanceUID> is required. If instances> is not specified, the entire series is retrieved. Properties | Improve this Doc View Source Instances Gets or sets a list of DICOM instances to be retrieved. Declaration public IList<RequestedInstance> Instances { get; set; } Property Value Type Description IList < RequestedInstance > | Improve this Doc View Source SeriesInstanceUid Gets or sets the Series Instance UID to be retrieved. Declaration public string SeriesInstanceUid { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedStudy.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestedStudy.html",
    "title": "Class RequestedStudy | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class RequestedStudy Details of a DICOM study to be retrieved for an inference request. Inheritance Object RequestedStudy Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class RequestedStudy : object Remarks StudyInstanceUid> is required. If Series> is not specified, the entire study is retrieved. Examples { ... \"studies\" : [ \"StudyInstanceUID\": \"1.2.3.4.555.6666.7777\", \"series\": [ \"SeriesInstanceUID\": \"1.2.3.4.55.66.77.88\", \"instances\": [ \"SOPInstanceUID\": [ \"1.2.3.4.5.6.7.8.99.1\", \"1.2.3.4.5.6.7.8.99.2\", \"1.2.3.4.5.6.7.8.99.3\", ... ] ] ] ] ... } Properties | Improve this Doc View Source Series Gets or sets a list of DICOM series to be retrieved. Declaration public IList<RequestedSeries> Series { get; set; } Property Value Type Description IList < RequestedSeries > | Improve this Doc View Source StudyInstanceUid Gets or sets the Study Instance UID to be retrieved. Declaration public string StudyInstanceUid { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestInputDataResource.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestInputDataResource.html",
    "title": "Class RequestInputDataResource | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class RequestInputDataResource Represents an input resource (data source). Inheritance Object RequestInputDataResource Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class RequestInputDataResource : object Examples { ... \"inputResources\" : [ { \"interface\": \"Algorithm\", \"connectionDetails\" : { \"name\": \"ai-lung-tumor\", \"id\": \"123456790\" } }, { \"interface\": \"DICOMweb\", \"connectionDetails\" : { \"operations\": [ \"QUERY\", \"RETRIEVE\" ], \"uri\": \"http://host:port/dicomweb/\", \"authID\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\", \"authType\": \"Basic\" } } ] ... } Properties | Improve this Doc View Source ConnectionDetails Gets or sets connection details of a data source. Declaration public InputConnectionDetails ConnectionDetails { get; set; } Property Value Type Description InputConnectionDetails | Improve this Doc View Source Interface Gets or sets the type of interface or a data source. Declaration public InputInterfaceType Interface { get; set; } Property Value Type Description InputInterfaceType"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestOutputDataResource.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.RequestOutputDataResource.html",
    "title": "Class RequestOutputDataResource | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class RequestOutputDataResource Represents an output/export resource (data source). Inheritance Object RequestOutputDataResource Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class RequestOutputDataResource : object Examples { ... \"outputResource\" : [ { \"interface\": \"DICOMweb\", \"connectionDetails\" : { \"operations\": [ \"STORE\" ], \"uri\": \"http://host:port/dicomweb/\", \"authID\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\", \"authType\": \"Basic\" } } ] ... } Properties | Improve this Doc View Source ConnectionDetails Gets or sets connection details of a data source. Declaration public DicomWebConnectionDetails ConnectionDetails { get; set; } Property Value Type Description DicomWebConnectionDetails | Improve this Doc View Source Interface Gets or sets the type of interface or a data source. Declaration public InputInterfaceType Interface { get; set; } Property Value Type Description InputInterfaceType"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.ServiceStatus.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.Rest.ServiceStatus.html",
    "title": "Enum ServiceStatus | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Enum ServiceStatus Defines the state of a running DICOM Adapter service. Namespace : Nvidia.Clara.DicomAdapter.API.Rest Assembly : Nvidia.Clara.Dicom.API.dll Syntax public enum ServiceStatus : int Fields Name Description Cancelled Service has been cancelled by a cancellation token. Running Service is running. Stopped Service is stopped. Unknown Unknown - default, during start up."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.API.SourceApplicationEntity.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.API.SourceApplicationEntity.html",
    "title": "Class SourceApplicationEntity | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class SourceApplicationEntity Source (SCP) Application Entity Inheritance Object BaseApplicationEntity SourceApplicationEntity Inherited Members BaseApplicationEntity.AeTitle BaseApplicationEntity.HostIp Namespace : Nvidia.Clara.DicomAdapter.API Assembly : Nvidia.Clara.Dicom.API.dll Syntax public class SourceApplicationEntity : BaseApplicationEntity Examples { \"hostIp\": \"10.20.100.200\", \"aeTitle\": \"AIAETITLE\" } Extension Methods ValidationExtensions.IsValid(SourceApplicationEntity, IEnumerable<String>, out IList<String>)"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ConfigurationException.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ConfigurationException.html",
    "title": "Class ConfigurationException | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ConfigurationException Represnets an exception based upon invalid configuration. Inheritance Object ConfigurationException Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class ConfigurationException : Exception Constructors | Improve this Doc View Source ConfigurationException(String) Declaration public ConfigurationException(string message) Parameters Type Name Description String message | Improve this Doc View Source ConfigurationException(String, Exception) Declaration public ConfigurationException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ConfigurationValidator.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ConfigurationValidator.html",
    "title": "Class ConfigurationValidator | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ConfigurationValidator Validates configuration based on application requirements and DICOM VR requirements. Inheritance Object ConfigurationValidator Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class ConfigurationValidator : IValidateOptions<DicomAdapterConfiguration> Constructors | Improve this Doc View Source ConfigurationValidator(ILogger<ConfigurationValidator>) Initializes an instance of the ConfigurationValidator class. Declaration public ConfigurationValidator(ILogger<ConfigurationValidator> logger) Parameters Type Name Description ILogger < ConfigurationValidator > logger Logger to be used by ConfigurationValidator Methods | Improve this Doc View Source Validate(String, DicomAdapterConfiguration) Checks if DicomAdapterConfiguration instance contains valid settings required by the application and conforms to DICOM standards. Declaration public ValidateOptionsResult Validate(string name, DicomAdapterConfiguration options) Parameters Type Name Description String name DicomAdapterConfiguration options Returns Type Description ValidateOptionsResult"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DataExportConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DataExportConfiguration.html",
    "title": "Class DataExportConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class DataExportConfiguration Inheritance Object DataExportConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class DataExportConfiguration : object Fields | Improve this Doc View Source FailureThreshold Gets or sets the failure threshold for a task to be marked as failure. Given that each task contains multiple DICOM files, a task would be marked as failure if the percentage of files fail to be exported. Default 50%. Declaration public float FailureThreshold Field Value Type Description Single Properties | Improve this Doc View Source Agent Gets or sets the name of the agent used for querying export tasks from Results Service. Declaration public string Agent { get; set; } Property Value Type Description String | Improve this Doc View Source MaximumRetries Gets or sets the maximum number of retries the export service shall perform on an export task. Default 3 retries. Declaration public int MaximumRetries { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PollFrequencyMs Gets or sets the poll frequency for the export task service. Defaults to 500ms. Declaration public int PollFrequencyMs { get; set; } Property Value Type Description Int32"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DicomAdapterConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DicomAdapterConfiguration.html",
    "title": "Class DicomAdapterConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class DicomAdapterConfiguration Main class used when deserializing the application configuration file. Inheritance Object DicomAdapterConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class DicomAdapterConfiguration : object Constructors | Improve this Doc View Source DicomAdapterConfiguration() Declaration public DicomAdapterConfiguration() Properties | Improve this Doc View Source Dicom Represents the dicom section of the configuration file. Declaration public DicomConfiguration Dicom { get; set; } Property Value Type Description DicomConfiguration | Improve this Doc View Source Services Represent the services section of the configuration file. Declaration public ServicesConfiguration Services { get; set; } Property Value Type Description ServicesConfiguration | Improve this Doc View Source Storage Represents the storage section of the configuration file. Declaration public StorageConfiguration Storage { get; set; } Property Value Type Description StorageConfiguration"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DicomConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.DicomConfiguration.html",
    "title": "Class DicomConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class DicomConfiguration Represents the dicom section of the configuration file. Inheritance Object DicomConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class DicomConfiguration : object Fields | Improve this Doc View Source DatabaseConnectionStringKey Name of the key for retrieve database connection string. Declaration public const string DatabaseConnectionStringKey = null Field Value Type Description String Properties | Improve this Doc View Source Scp Represents the dicom>scp section of the configuration file. Declaration public ScpConfiguration Scp { get; set; } Property Value Type Description ScpConfiguration | Improve this Doc View Source Scu Represents the dicom>scu section of the configuration file. Declaration public ScuConfiguration Scu { get; set; } Property Value Type Description ScuConfiguration"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.html",
    "title": "Namespace Nvidia.Clara.DicomAdapter.Configuration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Namespace Nvidia.Clara.DicomAdapter.Configuration Classes ConfigurationException Represnets an exception based upon invalid configuration. ConfigurationValidator Validates configuration based on application requirements and DICOM VR requirements. DataExportConfiguration DicomAdapterConfiguration Main class used when deserializing the application configuration file. DicomConfiguration Represents the dicom section of the configuration file. PlatformConfiguration ScpConfiguration Represents dicom>scp section of the configuration file. ScuConfiguration Represents dicom>scu section of the configuration file. ServicesConfiguration Source (SCP) Application Entity StorageConfiguration ValidationExtensions VerificationServiceConfiguration Represents dicom>scp>verification section of the configuration file."
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.PlatformConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.PlatformConfiguration.html",
    "title": "Class PlatformConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class PlatformConfiguration Inheritance Object PlatformConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class PlatformConfiguration : object Constructors | Improve this Doc View Source PlatformConfiguration() Declaration public PlatformConfiguration() Properties | Improve this Doc View Source Endpoint Gets or sets the URI of the Platform API. Declaration public string Endpoint { get; set; } Property Value Type Description String | Improve this Doc View Source MaxRetries Gets or sets the maximum number of retries to be performed when an execution attempt fails to connect to Clara Platform. Declaration public int MaxRetries { get; set; } Property Value Type Description Int32 | Improve this Doc View Source MetadataDicomSource Gets or sets a list of DICOM tags to be extracted and attached to the job triggered with the Clara Jobs Service. Declaration public List<string> MetadataDicomSource { get; set; } Property Value Type Description List < String > | Improve this Doc View Source ParallelUploads Gets or sets maximum number of concurrent uploads to the Paylodas Service. Declaration public int ParallelUploads { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RetryDelaySeconds Gets or sets number of seconds to wait before attempting to retry. Declaration public int RetryDelaySeconds { get; set; } Property Value Type Description Int32 | Improve this Doc View Source UploadMetadata Gets or sets whether or not to upload metadata with the associated job. If enabled, DICOM Adapter tries to extract all string and numeric fields specified in the MetadataDicomSource field from one of the received DICOM instances. Declaration public bool UploadMetadata { get; set; } Property Value Type Description Boolean"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ScpConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ScpConfiguration.html",
    "title": "Class ScpConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ScpConfiguration Represents dicom>scp section of the configuration file. Inheritance Object ScpConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class ScpConfiguration : object Constructors | Improve this Doc View Source ScpConfiguration() Declaration public ScpConfiguration() Properties | Improve this Doc View Source LogDimseDatasets Gets or sets whether or not to write command and data datasets to the log. Declaration public bool LogDimseDatasets { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaximumNumberOfAssociations Gets or sets maximum number of simultaneous DICOM associations for the SCP service. Declaration public int MaximumNumberOfAssociations { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Port Gets or sets Port number to be used for SCP service. Declaration public int Port { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RejectUnknownSources Gets or sets whether or not associations shall be rejected if not defined in the dicom>scp>sources section. Declaration public bool RejectUnknownSources { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Verification Gets or sets Verification (C-ECHO) service configuration Declaration public VerificationServiceConfiguration Verification { get; } Property Value Type Description VerificationServiceConfiguration"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ScuConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ScuConfiguration.html",
    "title": "Class ScuConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ScuConfiguration Represents dicom>scu section of the configuration file. Inheritance Object ScuConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class ScuConfiguration : object Constructors | Improve this Doc View Source ScuConfiguration() Declaration public ScuConfiguration() Properties | Improve this Doc View Source AeTitle Gets or sets the AE Title for SCU service. Declaration public string AeTitle { get; set; } Property Value Type Description String | Improve this Doc View Source ExportSettings Represents the dicom>scu>export section of the configuration file. Declaration public DataExportConfiguration ExportSettings { get; set; } Property Value Type Description DataExportConfiguration | Improve this Doc View Source LogDataPdus Gets or sets whether or not to write message to log for each P-Data-TF PDU sent or received. Declaration public bool LogDataPdus { get; set; } Property Value Type Description Boolean | Improve this Doc View Source LogDimseDatasets Gets or sets whether or not to write command and data datasets to the log. Declaration public bool LogDimseDatasets { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaximumNumberOfAssociations Gets or sets the maximum number of simultaneous DICOM associations for the SCU service. Declaration public int MaximumNumberOfAssociations { get; set; } Property Value Type Description Int32"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ServicesConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ServicesConfiguration.html",
    "title": "Class ServicesConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ServicesConfiguration Source (SCP) Application Entity Inheritance Object ServicesConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class ServicesConfiguration : object Properties | Improve this Doc View Source Platform Gets or sets the URI of the Platform API. Declaration public PlatformConfiguration Platform { get; set; } Property Value Type Description PlatformConfiguration | Improve this Doc View Source ResultsServiceEndpoint Gets or sets the URI of the Results Service API. Declaration public string ResultsServiceEndpoint { get; set; } Property Value Type Description String"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.StorageConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.StorageConfiguration.html",
    "title": "Class StorageConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class StorageConfiguration Inheritance Object StorageConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class StorageConfiguration : object Constructors | Improve this Doc View Source StorageConfiguration() Declaration public StorageConfiguration() | Improve this Doc View Source StorageConfiguration(IFileSystem) Declaration public StorageConfiguration(IFileSystem fileSystem) Parameters Type Name Description IFileSystem fileSystem Properties | Improve this Doc View Source ReserveSpaceGB Gets or sets the reserved disk space for DICOM Adapter with default value of 5GB. DICOM Adapter will stop accepting (C-STORE-RQ) assocations, stop exporting and stop retreiving data via DICOMweb when available disk space is less than the value. Declaration public uint ReserveSpaceGB { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Temporary Gets or sets temporary storage path. This is used to store all instances received to a temporary folder. Declaration public string Temporary { get; set; } Property Value Type Description String | Improve this Doc View Source TemporaryDataDirFullPath Declaration public string TemporaryDataDirFullPath { get; } Property Value Type Description String | Improve this Doc View Source Watermark Gets or sets the watermark for disk usage with default value of 75%, meaning that DICOM Adapter will stop accepting (C-STORE-RQ) assocations, stop exporting and stop retreiving data via DICOMweb when used disk space is above the watermark. Declaration public uint Watermark { get; set; } Property Value Type Description UInt32"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ValidationExtensions.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.ValidationExtensions.html",
    "title": "Class ValidationExtensions | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class ValidationExtensions Inheritance Object ValidationExtensions Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public static class ValidationExtensions : object Methods | Improve this Doc View Source IsAeTitleValid(String, String, IList<String>) Declaration public static bool IsAeTitleValid(string source, string aeTitle, IList<string> validationErrors = null) Parameters Type Name Description String source String aeTitle IList < String > validationErrors Returns Type Description Boolean | Improve this Doc View Source IsPortValid(String, Int32, IList<String>) Declaration public static bool IsPortValid(string source, int port, IList<string> validationErrors = null) Parameters Type Name Description String source Int32 port IList < String > validationErrors Returns Type Description Boolean | Improve this Doc View Source IsValid(ClaraApplicationEntity, IEnumerable<String>, out IList<String>) Declaration public static bool IsValid(this ClaraApplicationEntity claraApplicationEntity, IEnumerable<string> existingAeTitles, out IList<string> validationErrors) Parameters Type Name Description ClaraApplicationEntity claraApplicationEntity IEnumerable < String > existingAeTitles IList < String > validationErrors Returns Type Description Boolean | Improve this Doc View Source IsValid(DestinationApplicationEntity, IEnumerable<String>, out IList<String>) Declaration public static bool IsValid(this DestinationApplicationEntity destinationApplicationEntity, IEnumerable<string> existingDestinationNames, out IList<string> validationErrors) Parameters Type Name Description DestinationApplicationEntity destinationApplicationEntity IEnumerable < String > existingDestinationNames IList < String > validationErrors Returns Type Description Boolean | Improve this Doc View Source IsValid(SourceApplicationEntity, IEnumerable<String>, out IList<String>) Declaration public static bool IsValid(this SourceApplicationEntity sourceApplicationEntity, IEnumerable<string> existingAeTitles, out IList<string> validationErrors) Parameters Type Name Description SourceApplicationEntity sourceApplicationEntity IEnumerable < String > existingAeTitles IList < String > validationErrors Returns Type Description Boolean | Improve this Doc View Source IsValidHostNameIp(String, String, IList<String>) Declaration public static bool IsValidHostNameIp(string source, string hostIp, IList<string> validationErrors = null) Parameters Type Name Description String source String hostIp IList < String > validationErrors Returns Type Description Boolean"
  },
  "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.VerificationServiceConfiguration.html": {
    "href": "api/dotnet/Nvidia.Clara.DicomAdapter.Configuration.VerificationServiceConfiguration.html",
    "title": "Class VerificationServiceConfiguration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Class VerificationServiceConfiguration Represents dicom>scp>verification section of the configuration file. Inheritance Object VerificationServiceConfiguration Namespace : Nvidia.Clara.DicomAdapter.Configuration Assembly : Nvidia.Clara.Dicom.Configuration.dll Syntax public class VerificationServiceConfiguration : object Constructors | Improve this Doc View Source VerificationServiceConfiguration() Declaration public VerificationServiceConfiguration() Properties | Improve this Doc View Source Enabled Gets or sets whether to enable the verification service. Declaration public bool Enabled { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TransferSyntaxes Gets or sets a list of transfer syntaxes accepted by the verification service. Declaration public IList<string> TransferSyntaxes { get; } Property Value Type Description IList < String >"
  },
  "api/rest/config.html": {
    "href": "api/rest/config.html",
    "title": "Configuration APIs | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Configuration APIs The Clara DICOM Adapter supports the following RESTful APIs on (default) port 5000. GET /api/config/claraaetitle Retrieves a list of Clara SCP Application Entities. Parameters N/A Responses Response Content Type: JSON - Array of ClaraApplicationEntity . Code Description 200 AE Titles retrieved successfully. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/claraaetitle' GET /api/config/claraaetitle/{ae-title} Retrieves details of the named Clara SCP AE Title. Parameters Name Type Description ae-title string the AE Title to be retrieved. Responses Response Content Type: JSON - ClaraApplicationEntity . Code Description 200 AE Titles retrieved successfully. 404 AE Titles not found. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/claraaetitle/my-brain-aet' POST /api/config/claraaetitle Creates a new Clara SCP AE Title. Parameters Please see the ClaraApplicationEntity class definition for details. Responses Response Content Type: JSON - ClaraApplicationEntity . Code Description 201 AE Title crated successfully. 400 Validation error. 500 Server error. Example Request curl --location --request POST 'http://localhost:5000/api/config/ClaraAeTitle/' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"name\": \"brain-tummor\", \"aeTitle\": \"BrainTumorModel\", \"overwriteSameInstance\": true, \"ignoredSopClasses\": [ \"1.2.840.10008.5.1.4.1.1.7\" ], \"processorSettings\": { \"timeout\": 5, \"priority\": \"higher\", \"pipeline-brain-tumor\": \"7b9cda79ed834fdc87cd4169216c4011\" } }' DELETE /api/config/claraaetitle/{ae-title} Deletes a Clara SCP AE Title. Parameters Name Type Description ae-title string the AE Title to be deleted. Responses Response Content Type: JSON - ClaraApplicationEntity . Code Description 200 AE Title deleted. 404 AE Title not found. 500 Server error. Example Request curl --location --request DELETE 'http://localhost:5000/api/config/claraaetitle/clara-brain-tumor' GET /api/config/sourceaetitle Retrieves a list of calling (Source) Application Entities. Parameters N/A Responses Response Content Type: JSON - Array of SourceApplicationEntity . Code Description 200 AE Titles retrieved successfully. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/sourceaetitle' GET /api/config/sourceaetitle/{ae-title} Retrieves details of the named DICOM calling (source) AE Title. Parameters Name Type Description ae-title string the details of an AE Title to be retrieved. Responses Response Content Type: JSON - SourceApplicationEntity . Code Description 200 AE Titles retrieved successfully. 404 AE Titles not found. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/sourceaetitle/pacs' POST /api/config/sourceaetitle Creates a new calling (Source) AE Title. Parameters Please see the SourceApplicationEntity class definition for details. Responses Response Content Type: JSON - SourceApplicationEntity . Code Description 201 AE Title created successfully. 400 Validation error. 500 Server error. Example Request curl --location --request POST 'http://localhost:5000/api/config/sourceaetitle' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"hostIp\": \"1.2.3.4\", \"aeTitle\": \"Orthanc\" }' DELETE /api/config/sourceaetitle/{ae-title} Deletes a calling (Source) AE Title. Parameters Name Type Description name string the AE to be retrieved. Responses Response Content Type: JSON - SourceApplicationEntity . Code Description 200 AE Title deleted. 404 AE Title not found. 500 Server error. Example Request curl --location --request DELETE 'http://localhost:5000/api/config/sourceaetitle/pacs' GET /api/config/destinationaetitle Retrieves a list of Destination Application Entities. Parameters N/A Responses Response Content Type: JSON - Array of DestinationApplicationEntity . Code Description 200 AE Titles retrieved successfully. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/destinationaetitle' GET /api/config/destinationaetitle/{name} Retrieves the named destination AE Title. Parameters Name Type Description name string the named AE Title to be retrieved. Responses Response Content Type: JSON - DestinationApplicationEntity . Code Description 200 AE Titles retrieved successfully. 404 AE Titles not found. 500 Server error. Example Request curl --location --request GET 'http://localhost:5000/api/config/destinationaetitle/my-pacs' POST /api/config/destinationaetitle Creates a new Destination AE Title. Parameters Please see the DestinationApplicationEntity class definition for details. Responses Response Content Type: JSON - DestinationApplicationEntity . Code Description 201 AE Title created successfully. 400 Validation error. 500 Server error. Example Request curl --location --request POST 'http://localhost:5000config/destinationaetitle' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"name\":\"pacs\", \"hostIp\": \"10.20.30.40\", \"aeTitle\": \"ARCHIVEX\", \"port\": 104 }' Job Names The Inference API generates the job names using the following pattern: {Transaction ID}-{Algorithm}-{UTC Time \"yyyyMMddHHmmss\"} e.g. Given: Transaction ID: ABC123 Pipeline: b3c306293939461794f4fc5b16d3cb94 ABC123-b3c306293939461794f4fc5b16d3cb94-20211225101030 DELETE /api/config/destinationaetitle/{name} Deletes a Destination AE Title. Parameters Name Type Description name string the named AE Title to be retrieved. Responses Response Content Type: JSON - DestinationApplicationEntity . Code Description 200 AE Title deleted. 404 AE Title not found. 500 Server error. Example Request curl --location --request DELETE 'http://localhost:5000/api/config/claraaetitle/dicom-router'"
  },
  "api/rest/health.html": {
    "href": "api/rest/health.html",
    "title": "Health APIs | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Health APIs The Clara DICOM Adapter supports the following RESTful APIs on (default) port 5000. GET /health/status DICOM Adapter service status: Active DICOM DIMSE associations Internal service status Parameters N/A Responses Response Content Type: JSON - HealthStatusResponse . Code Description 200 Status is available. 500 Server error. GET /health/ready GET /health/live DICOM Adapter service readiness and liveness. Parameters N/A Responses Response Content Type: string Health : All services are running. Unhealthy : One or more services have stopped or crashed. Code Description 200 Service is healthy. 503 Service is unhealthy."
  },
  "api/rest/inference.html": {
    "href": "api/rest/inference.html",
    "title": "Inference Request APIs | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Inference Request APIs The Clara DICOM Adapter supports the following RESTful APIs on (default) port 5000. POST /api/inference Triggers a new inference job using the specified DICOM dataset from the specified data sources. Warning This API is a work in progress and may change between releases. Note The inference API is extended based on the draft created by the ACR (American College of Radiology). Please refer to ACR's Platform-Model Communication for AI for more information. Parameters Please see the InferenceRequest class definition for examples. Request Content Type: JSON Name Type Description transactionID string Required . User provided transaction ID for correlating an inference request. priority number Valid range 0-255. Please refer to Nvidia.Clara.DicomAdapter.API.Rest.InferenceRequest.Priority for details. inputMetadata inputMetadata object Required . Specifies the dataset associated with the inference request. inputResources array of inputResource objects Required . Data sources where the specified dataset to be retrieved. Clara Only Must include one interface that is type of Algorithm . outputResources array of inputResource objects Required . Output destinations where results are exported to. Responses Response Content Type: JSON - InferenceRequestResponse . Code Description 200 Inference request received and scheduled for processing. 422 Request contains invalid data or is missing required fields. 500 Server error. GET /api/inference/status/{id} Retrieves status of an inference request. Parameters The transaction ID or the Clara Job ID must be provided as part of the request URI. Responses Response Content Type: JSON - InferenceStatusResponse . Code Description 200 Inference request status is available. 404 Inference request cannot be found. 500 Server error."
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Changelog 0.8.1 🆕 new: DICOMweb client for WADO (Web Access to DICOM Objects)/QIDO (Query based on ID for DICOM Objects)/STOW (Store Over the Web) and a CLI is available in DicomWebClient . 🆕 new: New REST API to trigger a new inference request is now available based on the specs defined by the American College of Radiology (ACR). Refer to to the API Documentation for more information. 🆕 new: New & updated REST APIs : POST /api/inference GET /api/inference/status/{id} GET /api/config/claraaetitle/{ae-title} GET /api/config/sourceaetitle/{ae-title} GET /api/config/destinationaetitle/{name} GET /health/ready GET /health/live GET /health/status 🆕 new: New configuration options added to monitor disk usage, please refer to setup to configure DICOM Adapter before first use. 🆕 new: Upload metadata to Clara Jobs API. Source of the DICOM instance (e.g. AE Title or the Transaction ID) and number of DICOM instances are included by default. User may configure values to be extracted from DICOM tags, please refer to configuration schema . 🆕 new: DICOM Adapter helm chart now supports helm v3.4.x. 🆕 new: Update Clara Platform Client to v0.8.1. ⚠️ Clara CLI 0.8.1 is required. Refer to compatibility matrix for additional information. ⚠️ All derived classes of JobProcessorBase must be decorated with a ProcessorValidationAttribute attribute so its settings can be validated when the Create Clara AE Title is called (POST /api/config/ClaraAeTitle) ⚠️ Default number of concurrent associations have been changed to 25 for SCP and 8 for SCU. Please adjust accordingly. ⛔ removed: Clara AE Titles, source AE Titles and destination AE Titles can no longer be configured in the config file. Please use the Clara CLI to configure them. 0.7.0 🆕 new: DICOM Adapter now accepts concurrent associations per AE Title and has a new Job Processor extension that allows developers to extend and customize how to associate received DICOM instances with a pipeline job. ⚠️ breaking: The YAML-formatted configuration file has been replaced and consolidated into a single appsettings.json file. 0.6.0 🆕 new: The ability to configure Clara AE-Title s, Sources , and Destinations via Kubernetes CRD has been added. This allows a user to add a new Clara AE-Title and associate it with a Clara Pipeline without restarting DICOM Adapter. DICOM sources and destinations can also be added via CRD. ⛔ removed: timeout-group is no longer supported. This can be replaced with a custom plug-in if required. timeout can still accept multiple associations and associate all received DICOM instances with a Clara job."
  },
  "compliance/dicom.html": {
    "href": "compliance/dicom.html",
    "title": "DICOM Interface | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "DICOM Interface The following reference describes the connectivity capabilities of Clara Deploy SDK out of the box. Users implementing the Clara Deploy SDK must update their DICOM Conformance Statement according to the actual capabilities of their application. DICOM SCP Clara DICOM SCP implements C-ECHO and C-Store services to interface with other medical devices, such as PACS. It allows users to define multiple AE Titles to enable DICOM communication. It then maps each AE Title to a pipeline. DIMSE Services (SCP) C-STORE : Accepts incoming DICOM objects C-ECHO : Accepts incoming DICOM verification requests SOP Classes (Transfer) and Transfer Syntax Supported Clara DICOM SCP accepts any proposed transfer syntaxes and stores any accepted instances as-is on disk without any decoding support. Each AE Title may be configured to ignore and not save certain SOP Classes. Association Policies Clara DICOM Storage SCP accepts associations but does not initiate associations. Clara DICOM Storage SCP accepts up to 1000 (default: 25) simultaneous associations across all configured AE Titles. Clara DICOM Storage SCP accepts associations when storage space usage is less than the configured watermark (default: 85% of the storage partition) and the available storage space is above the configured reserved storage size (default: 5GB of free space). Asynchronous mode is not supported. All operations are performed synchronously. The Implementation Class UID is \"1.3.6.1.4.1.30071.8\" and the Implementation Version Name is \"fo-dicom 4.0.0\". An association must be released properly for received instances to be associated with a pipeline. Files received from an aborted association or an interrupted connection are either removed immediately or removed based on a configured timeout value. Security Profiles Clara DICOM Storage SCP does not conform to any defined DICOM Security Profiles. It is assumed that the product is used within a secured environment that uses a firewall, router protection, VPN, and/or other network security provisions. The Clara DICOM Storage SCP service can be configured to check the following DICOM values when determining whether to accept Association Open Requests: Calling AE Title Called AE Title Clara SCP AE Title can be configured to accept Association Requests from only a limited list of Calling AE Titles. DICOM SCU The Clara DICOM Storage SCU provides the DICOM Storage Service for interfacing with other medical devices such as PACS. It is executed at system startup and exists in a container using a single configurable AE Title. DIMSE Services (SCU) C-STORE : Sends processed results that are stored in DICOM format The Clara DICOM Storage SCU initiates a push of DICOM objects to the Remote DICOM Storage SCP. The system allows multiple remote SCPs to be configured. SOP Classes (Transfer) Supported and Transfer Syntax The DICOM Store SCU service supports all SOP classes of the Storage Service Class. The DICOM Store SCU service transfers a DICOM object as-is using the stored Transfer Syntax, without the support of compression, decompression, or Transfer Syntax conversion. Association Policies Clara DICOM Storage SCU initiates associations but does not accept associations. Clara DICOM Storage SCU allows two (configurable) SCU instances simultaneously. Asynchronous mode is not supported. All operations are performed synchronously. The Implementation Class UID is \"1.3.6.1.4.1.30071.8\" and the Implementation Version Name is \"fo-dicom 4.0.0\". Security Profiles Not applicable"
  },
  "compliance/open-source-licenses.html": {
    "href": "compliance/open-source-licenses.html",
    "title": "Open Source Licenses | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Open Source Licenses Ardalis.GuardClauses Copyright (c) 2017 Steve Smith ConsoleAppFramework Copyright (c) 2020 Cysharp, Inc. Microsoft .NET Copyright (c) .NET Foundation and Contributors Newtonsoft.Json Copyright (c) 2007 James Newton-King System.IO.Abstractions Copyright (c) Tatham Oddie and Contributors The MIT License (MIT) Copyright (see above) All rights reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. fo-dicom Fellow Oak DICOM Copyright (c) 2012-2020 fo-dicom contributors This software is licensed under the Microsoft Public License (MS-PL) Microsoft Public License (MS-PL) This license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the license, do not use the software. 1. Definitions The terms \"reproduce,\" \"reproduction,\" \"derivative works,\" and \"distribution\" have the same meaning here as under U.S. copyright law. A \"contribution\" is the original software, or any additions or changes to the software. A \"contributor\" is any person that distributes its contribution under this license. \"Licensed patents\" are a contributor's patent claims that read directly on its contribution. 2. Grant of Rights (A) Copyright Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free copyright license to reproduce its contribution, prepare derivative works of its contribution, and distribute its contribution or any derivative works that you create. (B) Patent Grant- Subject to the terms of this license, including the license conditions and limitations in section 3, each contributor grants you a non-exclusive, worldwide, royalty-free license under its licensed patents to make, have made, use, sell, offer for sale, import, and/or otherwise dispose of its contribution in the software or derivative works of the contribution in the software. 3. Conditions and Limitations (A) No Trademark License- This license does not grant you rights to use any contributors' name, logo, or trademarks. (B) If you bring a patent claim against any contributor over patents that you claim are infringed by the software, your patent license from such contributor to the software ends automatically. (C) If you distribute any portion of the software, you must retain all copyright, patent, trademark, and attribution notices that are present in the software. (D) If you distribute any portion of the software in source code form, you may do so only under this license by including a complete copy of this license with your distribution. If you distribute any portion of the software in compiled or object code form, you may only do so under a license that complies with this license. (E) The software is licensed \"as-is.\" You bear the risk of using it. The contributors give no express warranties, guarantees or conditions. You may have additional consumer rights under your local laws which this license cannot change. To the extent permitted under your local laws, the contributors exclude the implied warranties of merchantability, fitness for a particular purpose and non-infringement. ---- libijg (from DCMTK 3.5.4 COPYRIGHT) ---- Unless otherwise specified, the DCMTK software package has the following copyright: /* * Copyright (C) 1994-2004, OFFIS * * This software and supporting documentation were developed by * * Kuratorium OFFIS e.V. * Healthcare Information and Communication Systems * Escherweg 2 * D-26121 Oldenburg, Germany * * THIS SOFTWARE IS MADE AVAILABLE, AS IS, AND OFFIS MAKES NO WARRANTY * REGARDING THE SOFTWARE, ITS PERFORMANCE, ITS MERCHANTABILITY OR * FITNESS FOR ANY PARTICULAR USE, FREEDOM FROM ANY COMPUTER DISEASES OR * ITS CONFORMITY TO ANY SPECIFICATION. THE ENTIRE RISK AS TO QUALITY AND * PERFORMANCE OF THE SOFTWARE IS WITH THE USER. * * Copyright of the software and supporting documentation is, unless * otherwise stated, owned by OFFIS, and free access is hereby granted as * a license to use this software, copy this software and prepare * derivative works based upon this software. However, any distribution * of this software source code or supporting documentation or derivative * works (source code and supporting documentation) must include the * three paragraphs of this copyright notice. * */ The dcmjpeg sub-package includes an adapted version of the Independent JPEG Group Toolkit Version 6b, which is contained in dcmjpeg/libijg8, dcmjpeg/libijg12 and dcmjpeg/libijg16. This toolkit is covered by the following copyright. The original README file for the Independent JPEG Group Toolkit is located in dcmjpeg/docs/ijg_readme.txt. /* * The authors make NO WARRANTY or representation, either express or implied, * with respect to this software, its quality, accuracy, merchantability, or * fitness for a particular purpose. This software is provided \"AS IS\", and you, * its user, assume the entire risk as to its quality and accuracy. * * This software is copyright (C) 1991-1998, Thomas G. Lane. * All Rights Reserved except as specified below. * * Permission is hereby granted to use, copy, modify, and distribute this * software (or portions thereof) for any purpose, without fee, subject to these * conditions: * (1) If any part of the source code for this software is distributed, then this * README file must be included, with this copyright and no-warranty notice * unaltered; and any additions, deletions, or changes to the original files * must be clearly indicated in accompanying documentation. * (2) If only executable code is distributed, then the accompanying * documentation must state that \"this software is based in part on the work of * the Independent JPEG Group\". * (3) Permission for use of this software is granted only if the user accepts * full responsibility for any undesirable consequences; the authors accept * NO LIABILITY for damages of any kind. * * These conditions apply to any software derived from or based on the IJG code, * not just to the unmodified library. If you use our work, you ought to * acknowledge us. * * Permission is NOT granted for the use of any IJG author's name or company name * in advertising or publicity relating to this software or products derived from * it. This software may be referred to only as \"the Independent JPEG Group's * software\". * * We specifically permit and encourage the use of this software as the basis of * commercial products, provided that all warranty or liability claims are * assumed by the product vendor. */ ---- OpenJPEG JPEG 2000 codec (from license.txt) ---- /* * Copyright (c) 2002-2007, Communications and Remote Sensing Laboratory, Universite catholique de Louvain (UCL), Belgium * Copyright (c) 2002-2007, Professor Benoit Macq * Copyright (c) 2001-2003, David Janssens * Copyright (c) 2002-2003, Yannick Verschueren * Copyright (c) 2003-2007, Francois-Olivier Devaux and Antonin Descampe * Copyright (c) 2005, Herve Drolon, FreeImage Team * All rights reserved. * * Redistribution and use in source and binary forms, with or without * modification, are permitted provided that the following conditions * are met: * 1. Redistributions of source code must retain the above copyright * notice, this list of conditions and the following disclaimer. * 2. Redistributions in binary form must reproduce the above copyright * notice, this list of conditions and the following disclaimer in the * documentation and/or other materials provided with the distribution. * * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS `AS IS' * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE * POSSIBILITY OF SUCH DAMAGE. */ ---- CharLS JPEG-LS codec (from License.txt) ---- Copyright (c) 2007-2009, Jan de Vaan All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of my employer, nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ---- Unity.IO.Compression (from LICENSE.TXT and PATENTS.TXT) ---- The MIT License (MIT) Copyright (c) Microsoft Corporation Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Microsoft Patent Promise for .NET Libraries and Runtime Components Microsoft Corporation and its affiliates (\"Microsoft\") promise not to assert any .NET Patents against you for making, using, selling, offering for sale, importing, or distributing Covered Code, as part of either a .NET Runtime or as part of any application designed to run on a .NET Runtime. If you file, maintain, or voluntarily participate in any claim in a lawsuit alleging direct or contributory patent infringement by any Covered Code, or inducement of patent infringement by any Covered Code, then your rights under this promise will automatically terminate. This promise is not an assurance that (i) any .NET Patents are valid or enforceable, or (ii) Covered Code does not infringe patents or other intellectual property rights of any third party. No rights except those expressly stated in this promise are granted, waived, or received by Microsoft, whether by implication, exhaustion, estoppel, or otherwise. This is a personal promise directly from Microsoft to you, and you agree as a condition of benefiting from it that no Microsoft rights are received from suppliers, distributors, or otherwise from any other person in connection with this promise. Definitions: \"Covered Code\" means those Microsoft .NET libraries and runtime components as made available by Microsoft at https://github.com/Microsoft/referencesource. \".NET Patents\" are those patent claims, both currently owned by Microsoft and acquired in the future, that are necessarily infringed by Covered Code. .NET Patents do not include any patent claims that are infringed by any Enabling Technology, that are infringed only as a consequence of modification of Covered Code, or that are infringed only by the combination of Covered Code with third party code. \".NET Runtime\" means any compliant implementation in software of (a) all of the required parts of the mandatory provisions of Standard ECMA-335 – Common Language Infrastructure (CLI); and (b) if implemented, any additional functionality in Microsoft's .NET Framework, as described in Microsoft's API documentation on its MSDN website. For example, .NET Runtimes include Microsoft's .NET Framework and those portions of the Mono Project compliant with (a) and (b). \"Enabling Technology\" means underlying or enabling technology that may be used, combined, or distributed in connection with Microsoft's .NET Framework or other .NET Runtimes, such as hardware, operating systems, and applications that run on .NET Framework or other .NET Runtimes. ---- Nito.AsyncEx (from LICENSE.TXT) ---- The MIT License (MIT) Copyright (c) 2014 StephenCleary Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Microsoft.Data.SQLite Microsoft.EntityFrameworkCore morelinq Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS Polly New BSD License = Copyright (c) 2015-2020, App vNext All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of App vNext nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "index.html": {
    "href": "index.html",
    "title": "NVIDIA Clara™ DICOM Adapter v0.8.1.406 | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "NVIDIA Clara™ DICOM Adapter v0.8.1.406 Introduction Designed for the Clara Deploy SDK , the Clara DICOM Adapter implements the necessary DICOM services for interoperability between Clara and other medical devices. The Clara DICOM Adapter allows you to send/receive DICOM objects using standard DICOM protocols and interpret standard DICOM part-10 formats. Requirements Docker 18.09.2 or higher Helm v2.15.2 Kubernetes v1.15.12 Services Clara DICOM Adapter contains the following services: DICOM SCP Service : For handling incoming DICOM associations; responsible for storing received instances and notifying the Instance Stored Notification Service of each received DICOM instance. DICOM SCU Service : For exporting processed DICOM results to configured DICOM destinations. Instance Stored Notification Service : Designed with .NET Observer Pattern to allow every Job Processor to be notified when a new instance is available. Storage Space Reclaimer Service : Responsible for cleaning up received DICOM instances from temporary storage once they are uploaded to Clara Platform. DICOM SCP Service The DICOM SCP Service accepts standard DICOM C-ECHO and C-STORE commands. Please see the DICOM Interface SCP section for more information. All received instances are saved immediately to the configured temporary storage location ( DicomAdapter>storage>temporary which is mapped to /clara-io/clara-core/payloads/ by default on the host system) and then registered with the Instance Stored Notification Service . Received DICOM instances are stored on disk as-is using the original transfer syntax described in the DICOM Interface section. Users of the Clara Deploy SDK must handle the encoding/decoding of the DICOM files in their container(s). See Third Party Tools for a list of DICOM toolkits available for parsing, encoding, and decoding DICOM files. DICOM SCU Service The DICOM SCU Service , which is part of the Clara DICOM Adapter, queries the Clara Results Service for available tasks using the Clara SCU AET as the agent name ( DicomAdapter>dicom>scu>aeTitle ). Each retrieved task contains a list of DICOM files to be exported to the configured DICOM devices. If more than 50% of the files fails to be exported, the job is marked as failed and reported back to the Results Service --it will be retried up to three times at a later time. Note DICOM instances are sent as-is; no codec conversion is done as part of the SCU process. See the DICOM Interface SCU section for more information. Instance Stored Notification Service The Instance Stored Notification Service is designed to allow Job Processors to subscribe to DICOM Receive & Store events. This allows developers to extend or customize the processing logic without worrying about where and how to store DICOM instances. Note DICOM instances that are not handled by the associated Job Processor are sent to the Storage Space Reclaimer Service immediately for cleanup. Storage Space Reclaimer Service The Storage Space Reclaimer Service is responsible for removing stored DICOM instances from temporary storage after Job Processor has completed submission of a Clara pipeline job. Third Party Tools/DICOM Toolkit fo-dicom .NET dcmtk C++ pydicom Python go-dicom Go"
  },
  "setup/ae-title-job-processor.html": {
    "href": "setup/ae-title-job-processor.html",
    "title": "AE Title Job Processor | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "AE Title Job Processor The AE Title Job Processor is the default Job Processor used if not specified in the configuration. This job processor can group received instances by Study Instance UID (0020,000D) so that all received instances with the same Study Instance UID are used to trigger the configured Clara Pipeline(s). Configuration The AE Title Job Processor allows the following parameters to be customized: priority : The priority of the job to use during creation of the Clara pipeline job. Allowed values are lower , normal , higher , and immediate . Refer to the Clara Platform documentation for additional details on job priorities. timeout : The number of seconds to wait before creating a new Clara pipeline job (minimum 5 seconds). pipeline-* : Any settings that are prefixed with pipeline- tell the job processor that it is a Clara pipeline, and a new Clara pipeline job shall be created with the received instance(s). Examples Scenario 1 \"priority\": \"normal\", \"timeout\": 60, \"pipeline-lung\": \"8abf244aff7647989d4f6b3987a85759\", \"pipeline-heart\": \"c5f996a71e1d4959bd6a2c8cf7130f88\", \"pipeline-breast\": \"eb48c784ef20425580db7d46a30829b2\" With the settings above, the job processor will wait for 60 seconds before composing three Clara pipeline jobs: one for lung, one for heart, and one for breast. For example, if there are five studies for Patient X, and each of these studies are sent to the DICOM Adapter in a separate DICOM association within 60 seconds, then three Clara pipeline jobs are created, each with all five studies. Scenario 2 \"priority\": \"higher\", \"pipeline-breast\": \"8abf244aff7647989d4f6b3987a85759\" In this scenario, the job processor will group received instances with timeout set to 5 seconds. For example, if studies A, B, and C are all sent over in one DICOM association, and no additional instances are sent afterwards, then after five seconds, three breast pipeline jobs are created, one for each study. As another example, there is one study with four instances, and all four instances are sent in a separate association: The 2nd instance is received at T1+4 (where T1 is the time when the 1st instance is received); the 3rd is received at T2+3; and the last at T3+1. In this case, one Clara pipeline job will be created with all four instances. Job Names The AE Title Job Processor generates the job names using the following pattern: {Called AE Title}-{Name of the pipeline}-{UTC Time \"yyyyMMddHHmmss\"} e.g. Given: AE Title: LIVERAET Pipeline: LIVERAI LIVERAET-LIVERAI-20211225101030"
  },
  "setup/compatibility.html": {
    "href": "setup/compatibility.html",
    "title": "Clara Compatibility Matrix | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Clara Compatibility Matrix The following table contains software compatibility information between DICOM Adapter and other Clara components. DICOM Adapter Clara Platform Clara CLI Kubernetes Helm 0.8.1 0.8.1 0.8.1 1.19.4 3.4.1 0.7.3 0.7.3 - 0.7.4 0.7.3 - 0.7.4 1.15.4 2.15.2"
  },
  "setup/job-processors.html": {
    "href": "setup/job-processors.html",
    "title": "Job Processors | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Job Processors A Job Processor allows the user to configure how received DICOM instances will be associated with one or more configured Clara pipelines. Each configured Clara SCP AE Title must have one processor configured; if omitted, the default AE Title Job Processor is used. Extending JobProcessorBase By extending JobProcessorBase , which is found in Nvidia.Clara.Dicom.API.dll , developers can customize their inference job submission workflow. The following code snippet contains the properties and methods that are required when implementing a Job Processor: public abstract class JobProcessorBase : IDisposable, IObserver<InstanceStorageInfo> { public abstract string Name { get; } public abstract string AeTitle { get; } public abstract void HandleInstance(InstanceStorageInfo value); } Name : The name for the job processor. AeTitle : The AE Title that the processor is attached to. HandleInstance(...) : A detailed implementation of how a job processor handles received instances. To submit a job in the HandleInstance(...) method, developers can simply call base.SubmitPipelineJob(...) , giving the name of the job, the pipeline ID that has been registered with Clara Platform, the priority, and the DICOM instances to be associated with the job. Once job submission is completed, RemoveInstances(...) should be called with the instances so the DICOM files in the temporary storage can be cleaned up by the Storage Space Reclaimer Service . Sample Snippet [ProcessorValidation(ValidatorType = typeof(CustomJobProcessorValidator))] public class MyJobProcessor : JobProcessorBase { public override string Name => \"My Custom Job Processor\"; public override string AeTitle => _configuration.AeTitle; public override void HandleInstance(InstanceStorageInfo value) { if (value is null) { throw new ArgumentNullException(nameof(value)); }; if (!value.CalledAeTitle.Equals(_configuration.AeTitle)) { throw new InstanceNotSupportedException(value); }; // handle the instance here } protected override void Dispose(bool disposing) { // dispose any resource if needed } } public class CustomJobProcessorValidator : IJobProcessorValidator { public void Validate(string aeTitle, Dictionary<string, string> processorSettings) { // validate all processor settings // throw if anything is invalid // optionally throw on keys/values that are not used } } The ProcessorValidation attribute must be decorated for each derived class of JobProcessorBase , and a job processor validator must be provided. The validator must implement the IJobProcessorValidator inteface and validate any processor settings passed into the Clara Create AE Title API call, including the CLI."
  },
  "setup/schema.html": {
    "href": "setup/schema.html",
    "title": "Configuration | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Configuration Helm Chart Configuration Clara DICOM Adapter helm chart is stored in ~/.clara/charts/dicom-adapter/ if installed using Clara CLI. The following configuration files may be modified according to environment requirements: ~/.clara/charts/dicom-adapter/values.yaml dicomAdapter: dicomPort: 104 # default DICOM SCP listening port. apiPort: 5000 # default port for the web API. storage: volumeSize: 50Gi # disk space allocated for DICOM Adapter used for temporarily storing of received DICOM instances. hostPath: \"/clara-io\" # host path mounted into /payloads in the container for storing temporary files. database: volumeSize: 3Gi # disk space allocated for the DICOM Adapter database. Default uses sqlite3 database. hostPath: \"/clara-io/dicom-adapter\" # host path mounted into /database for storing the sqlite3 database file. ~/.clara/charts/dicom-adapter/files/appsettings.json { \"DicomAdapter\": { \"dicom\": { \"scp\": { \"port\": 104, // DICOM SCP listening port. (default 104) \"maximumNumberOfAssociations\": 25, // maximum number of concurrent associations. (range: 1-1000, default: 25) \"verification\": { \"enabled\": true, // respond to c-ECHO commands (default: true) \"transferSyntaxes\": [ \"1.2.840.10008.1.2.1\", // Explicit VR Little Endian \"1.2.840.10008.1.2\" , // Implicit VR Little Endian \"1.2.840.10008.1.2.2\", // Explicit VR Big Endian ] } \"logDimseDatasets\": false, // whether or not to write command and dataset to log (default false) \"rejectUnknownSources\": true // whether to reject unknown sources not listed in the source section. (default true) }, \"scu\": { \"export\": { \"maximumRetries\": 3, // number of retries the exporter shall perform before reporting failure to Results Service. \"failureThreshold\" 0.5, // failure threshold for a task to be marked as failure. \"pollFrequencyMs\": 500 // number of milliseconds each exporter shall poll tasks from Results Service, }, \"aeTitle\": \"ClaraSCU\", // AE Title of the SCU service \"logDimseDatasets\": false, // whether or not to write command and data datasets to the log. \"logDataPDUs\": false, // whether or not to write message to log for each P-Data-TF PDU sent or received \"maximumNumberOfAssociations\": 8, // maximum number of outbound DICOM associations (range: 1-100, default: 8) } }, \"services\": { \"platform\": { \"maxRetries\": 3, // maximum number of retries to be performed when an execution attempt fails to connect to connect o Clara Platform. \"retryDelaySeconds\": 180, // number of seconds to wait before attempting to retry. \"uploadMetadata\": false, // whether or not to upload metadata with the associated job defined in the `metadataDicomSource` property. \"metadataDicomSource\": [ // list of DICOM tags that are used when extracting metadata to be associated with an inference job. \"0008,0020\", \"0008,0060\", \"0008,1030\", \"0008,103E\", \"0010,0020\", \"0010,0030\", \"0010,1010\", \"0020,000D\" ] } }, \"storage\" : { \"temporary\" : \"/payloads\", // storage path used for storing received instances before uploading to Clara Platform. \"watermarkPercent\": 75, // storage space usage watermark to stop storing, exporting and retrieving of DICOM instances. \"reserveSpaceGB\": 5 // minimal storage space required to store, export and retrieve DICOM instances. } }, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Dicom\": \"Information\", \"System\": \"Warning\", \"Microsoft\": \"Warning\", \"Microsoft.Hosting.Lifetime\": \"Warning\", \"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker\": \"Error\", \"Nvidia\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Services.Disk\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Services.Export\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Services.Http\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Services.Jobs\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Services.Scp\": \"Information\" }, \"Console\": { \"disableColors\": true } }, \"AllowedHosts\": \"*\" } Configuration Validation Clara DICOM Adapter validates all settings during startup. Any provided values that are invalid or missing may cause the service to crash. If you are the running the DICOM Adapter inside Kubernetes/Helm, you may see the CrashLoopBack error. To review the validation errors, simply run kubectl logs <name-of-dicom-adapter-pod> . Logging DICOM Adapter, by default, write all logs to console. If DICOM Adapter is running inside a Docker container, additional configuration may be required to limit the size to prevent filling up storage space. Please refer to Docker for additional information. Log Levels Log level may be adjusted per module basis. For example, given the following log entries: 10:31:03 info: Nvidia.Clara.DicomAdapter.Server.Processors.AeTitleJobProcessor[0] Initializing AE Title DicomWebTest with processor Nvidia.Clara.DicomAdapter.Server.Processors.AeTitleJobProcessor, Nvidia.Clara.DicomAdapter 10:31:03 info: Nvidia.Clara.DicomAdapter.Server.Processors.AeTitleJobProcessor[0] AE Title DicomWebTest Processor Setting: timeout=5s By default, the Nvidia namespace is set to log all Information level logs. If additional information is required to debug the AE Title Job Processor module or to turn down the noise, simply add a new entry under the LogLevel section of the configuration file to adjust it: \"Logging\": { \"LogLevel\": { \"Nvidia\": \"Information\", \"Nvidia.Clara.DicomAdapter.Server.Processors.AeTitleJobProcessor\": \"Debug\", ... The following log level may be used: Trace Debug Information Warning Error Critical None Additional information may be found on docs.microsoft.com : LogLevel Enum Logging in .NET Job Metadata By default, DICOM Adapter uploads the following fields to the Clara Platform Metadata Store: Source : Source of the DICOM instances. It could either be the AE Title if the DICOM instances were received via SCP or the Transaction ID if requested through the inference API. Instances : Number of DICOM instances associated with this job. Additional metadata can be uploaded by turning on uploadMetadata and by specifying the DICOM tags in the metadataDicomSource property in the config file. DICOM Adapter will scan through all received DICOM instances and extract all unique values from the DICOM tags specified. If a single unique value is found for a DICOM tag, e.g. Patient ID 0010,0020 , a single entry is added to the metadata store: Metadata: 00100020: PID-123456 If more than one values are found in, e.g. Study Instance UID 0020,000D , multiple entries are added to the metadata store: Metadata: 0020000D-0: 1.2.276.0.2505010.3.2.3.16.208271309.474136.1617917877.309864 0020000D-1: 1.2.276.0.2350010.3.3.3.7.2088241309.474136.1617917887.309816 0020000D-2: 1.2.276.0.2530010.3.4.3.4.2088171309.474136.1617917867.309794 Warning Any PHI extracted from the DICOM instances and uploaded to the Clara Platform Metadata Store are stored in the Clara Platform database. Please refer to the Clara SDK documentation for additional information."
  },
  "setup/setup.html": {
    "href": "setup/setup.html",
    "title": "Setup | NVIDIA Clara™ DICOM Adapter v0.8.1.406",
    "keywords": "Setup This section will walk you through setting up Clara DICOM Adapter using the Clara Deploy AI COVID-19 Classification Pipeline as an example. Install Clara DICOM Adapter Helm Chart To install the Clara DICOM Adapter Helm Chart, please follow these steps: If the system doesn't already have Docker and Kubernetes installed, first run the Bootstrap script . Install Clara Deploy CLI . Install the Clara DICOM Adapter Helm Chart using the following command: $ clara pull dicom Next, we'll configure the Clara DICOM Adapter. Configure Storage Mount DICOM Adapter, by default, stores all received DICOM instances temporarily under /clara-io/clara-core/payloads which is mounted to /payloads inside the DICOM Adapter container. Disk storage size required for the temporary space depends on many factors: size per job, time to process each pipeline per job and the total number of jobs per day, etc. It is advised to allocate enough space for the temporary space or perhaps mount /clara-io on an network attached storage (NAS) devices. Note To change the default storage location on the host machine , find and modify the hostPath property in ~/.clara/charts/dicom-adapter/values.yaml and restart the DICOM Adapter. Note The default size of the persistent volume claim created for the mount is 50Gi. To increase or decrease the size of the volume claim, find and modify the volumeSize property in ~/.clara/charts/dicom-adapter/values.yaml and restart the DICOM Adapter. Configuring Clara DICOM Adapter The DICOM Adapter configuration is stored as JSON in ~/.clara/charts/dicom-adapter/files/appsettings.json . The default settings enable DICOM C-STORE SCP and C-STORE-SCU and set listening on port 104 . Note If Clara DICOM Adapter is deployed via helm chart, find and modify dicomPort in ~/.clara/charts/dicom-adapter/templates/values.yaml instead of the appsettings.json file. Default Settings (appsettings.json) { \"ConnectionStrings\": { \"DicomAdapterDatabase\": \"Data Source=dicomadapter.db\" }, \"DicomAdapter\": { \"dicom\": { \"scp\": { \"port\": 104, \"logDimseDatasets\": false, \"rejectUnknownSources\": true }, \"scu\": { \"aeTitle\": \"ClaraSCU\", \"logDimseDatasets\": false, \"logDataPDUs\": false } }, \"storage\" : { \"temporary\" : \"/payloads\", \"watermarkPercent\": 75, \"reserveSpaceGB\": 5 } }, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"System\": \"Warning\", \"Microsoft\": \"Warning\", \"Microsoft.Hosting.Lifetime\": \"Warning\", \"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker\": \"Error\" } }, \"AllowedHosts\": \"*\" } Please refer to Configuration Schema for a complete reference. Note Before running DICOM Adapter, adjust the values of watermarkPercent and reserveSpaceGB based on the expected number of studies and size of each study. Suggested value for reserveSpaceGB is 2x to 3x the size of a single study multiply by the number of configured Clara AE Titles. Note If DICOM Adapter is restarted before a C-STORE-RQ completes, associate is properly released and before it was able to create a job, the received DICOM instances are dropped upon restart. Note If DICOM Adapter ran out of available stroage space while receiving instances, the instances that were received and stored may trigger a new job after timeout depending on the logic of the Job Processor. Starting Clara DICOM Adapter Once you have configured the Clara DICOM Adapter, run the following command to start the service: clara dicom start Enable Incoming Associations Before setting up a new Clara AE Title , you must first register the COVID-19 pipeline: Refer to the COVID-19 Setup Guide to register the pipeline. Once you have registered the pipeline with Clara Platform and have the Pipeline ID , you can now set up a new Clara AE Title to accept DICOM associations and store DICOM instances. First, create a new Clara AE Title : $ clara dicom create aetitle -a COVIDAET pipeline-covid=<PIPELINE-ID> .. Note:: Per the DICOM standard, the length of the aeTitle value should not exceed 16 characters. Next, create a DICOM Source to allow that DICOM device to communicate with the DICOM Adapter: $ clara dicom create src -a MYPACS -i 10.20.30.1 Now you have a DICOM device with the AE Title MYPACS registered at IP address 10.20.30.1 , and Clara DICOM Adapter will now accept DICOM associations from this device. .. Note:: If you would like DICOM Adapter to accept any incoming DICOM association without verifying the source, you may set DicomAdapter>dicom>scp>rejectUnknownSources to false in the configuration file. Exporting Processed Results If the pipeline (in this case, the COVID-19 pipeline) generates results in DICOM format and needs to export the results back to a DICOM device (e.g. PACS), you will need to create a DICOM destination: $ clara dicom create dest -n MYPACS -a MYPACSAET -i 10.20.30.2 -p 1104 With the command and arguments above, we have created a new DICOM Destination named MYPACS with the AE Title MYPACSAET , at IP address 10.20.30.2 and port 1104 . Please note that the name argument ( -n ) must match the arguments defined in the pipeline. Please refer to Register Results Operator for a complete reference. Summary With all the steps completed above, the Clara DICOM Adapter is now ready to receive DICOM associations with the AE Title COVIDAET . To summarize, you've done the following: Install the Clara DICOM Adapter Helm Chart. Register the COVID-19 pipeline with Clara. Set up the Clara AE Title to run the COVID-19 pipeline. Set up the DICOM Source to allow incoming association requests. Set up the DICOM Destination for exporting processed results."
  }
}